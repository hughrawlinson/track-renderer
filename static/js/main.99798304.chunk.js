/*! For license information please see main.99798304.chunk.js.LICENSE */
(this["webpackJsonptrack-renderer"]=this["webpackJsonptrack-renderer"]||[]).push([[0],{14:function(e,n,t){},20:function(e,n,t){"use strict";t.r(n);var c=t(0),r=t.n(c),l=t(7),i=t.n(l),o=(t(14),t(3)),a=t.n(o),u=t(1),s=t(8),d=t(4),B=t(2),g=t(5);function b(e){var n=e.signal,t=e.label,l=Object(c.useState)(0),i=Object(B.a)(l,2),o=i[0],a=i[1],u=Object(c.useRef)(null);Object(c.useEffect)((function(){var e=u.current;return e.addEventListener("wheel",s),function(){return e.removeEventListener("wheel",s)}}),[]);var s=function(e){return e.preventDefault()},d=function(e){var n=Math.max.apply(null,e);return e.map((function(e){return e/n}))}(n).reduce((function(e,n,t){var c=e.points,r=e.previous;return{points:c+"".concat(t,",").concat(150-150*(n+r)/2," "),previous:n}}),{points:"0,".concat(150," "),previous:0}).points+"".concat(n.length,",").concat(150);return r.a.createElement("svg",{ref:u,onWheel:function(e){return e.preventDefault(),a(o-e.deltaY),!1},preserveAspectRatio:"none",viewBox:"".concat(function(e){return e>0?e:0}(o)," 0 ").concat(n.length-function(e){return e>0?e:0}(2*o)," ").concat(150),style:{height:150,width:"100%"}},r.a.createElement("defs",null,r.a.createElement("linearGradient",{id:"Gradient1",x1:"0",x2:"0",y1:"0",y2:"1"},r.a.createElement("stop",{offset:"0%",stopColor:"black"}),r.a.createElement("stop",{offset:"100%",stopColor:"black",stopOpacity:"0.2"}))),r.a.createElement("text",{x:"10",y:"20"},t),r.a.createElement("polyline",{points:d,fill:"url(#Gradient1)",stroke:"black"}))}var m=function(){var e=Object(c.useState)(null),n=Object(B.a)(e,2),t=n[0],l=n[1],i=Object(c.useState)("loudness"),o=Object(B.a)(i,2),m=o[0],I=o[1],p=[m];return r.a.createElement("div",{className:"App"},r.a.createElement("input",{onChange:function(e){var n,t;return a.a.async((function(c){for(;;)switch(c.prev=c.next){case 0:return console.log(e.target.files[0]),c.next=3,a.a.awrap(Object(g.extractFeature)({audioBlob:e.target.files[0],audioFeatures:p,extractionParams:{channels:[0],bufferSize:2048}}));case 3:n=c.sent,t=n[0].reduce((function(e,n){return p.reduce((function(t,c){return Object(d.a)({},t,Object(u.a)({},c,[].concat(Object(s.a)(e[c]),[n[c]])))}),{})}),p.reduce((function(e,n){return Object(d.a)({},e,Object(u.a)({},n,[]))}),{})),l(t);case 6:case"end":return c.stop()}}))},type:"file",accept:"audio/*"}),r.a.createElement("select",{value:m,onChange:function(e){return I(e.target.value)}},g.availableFeatureExtractors.map((function(e){return r.a.createElement("option",{key:e,value:e},e)}))),t&&r.a.createElement(r.a.Fragment,null,r.a.createElement("h1",null,"Signal here!"),Object.entries(t).map((function(e){var n=Object(B.a)(e,2),t=n[0],c=n[1];return r.a.createElement(b,{key:t,label:t,style:{maxWidth:"1vw"},signal:c})}))))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(m,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))},5:function(e,n,t){var c,r=t(16);window,c=function(){return function(e){var n={};function t(c){if(n[c])return n[c].exports;var r=n[c]={i:c,l:!1,exports:{}};return e[c].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,c){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:c})},t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(c,r,function(n){return e[n]}.bind(null,r));return c},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./src/main/index.ts")}({"./node_modules/assert/assert.js":function(e,n,t){"use strict";(function(n){var c=t("./node_modules/object-assign/index.js");function r(e,n){if(e===n)return 0;for(var t=e.length,c=n.length,r=0,l=Math.min(t,c);r<l;++r)if(e[r]!==n[r]){t=e[r],c=n[r];break}return t<c?-1:c<t?1:0}function l(e){return n.Buffer&&"function"===typeof n.Buffer.isBuffer?n.Buffer.isBuffer(e):!(null==e||!e._isBuffer)}var i=t("./node_modules/util/util.js"),o=Object.prototype.hasOwnProperty,a=Array.prototype.slice,u="foo"===function(){}.name;function s(e){return Object.prototype.toString.call(e)}function d(e){return!l(e)&&"function"===typeof n.ArrayBuffer&&("function"===typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer)))}var B=e.exports=y,g=/\s*function\s+([^\(\s]*)\s*/;function b(e){if(i.isFunction(e)){if(u)return e.name;var n=e.toString().match(g);return n&&n[1]}}function m(e,n){return"string"===typeof e?e.length<n?e:e.slice(0,n):e}function I(e){if(u||!i.isFunction(e))return i.inspect(e);var n=b(e);return"[Function"+(n?": "+n:"")+"]"}function p(e,n,t,c,r){throw new B.AssertionError({message:t,actual:e,expected:n,operator:c,stackStartFunction:r})}function y(e,n){e||p(e,!0,n,"==",B.ok)}function F(e,n,t,c){if(e===n)return!0;if(l(e)&&l(n))return 0===r(e,n);if(i.isDate(e)&&i.isDate(n))return e.getTime()===n.getTime();if(i.isRegExp(e)&&i.isRegExp(n))return e.source===n.source&&e.global===n.global&&e.multiline===n.multiline&&e.lastIndex===n.lastIndex&&e.ignoreCase===n.ignoreCase;if(null!==e&&"object"===typeof e||null!==n&&"object"===typeof n){if(d(e)&&d(n)&&s(e)===s(n)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===r(new Uint8Array(e.buffer),new Uint8Array(n.buffer));if(l(e)!==l(n))return!1;var o=(c=c||{actual:[],expected:[]}).actual.indexOf(e);return-1!==o&&o===c.expected.indexOf(n)||(c.actual.push(e),c.expected.push(n),function(e,n,t,c){if(null===e||void 0===e||null===n||void 0===n)return!1;if(i.isPrimitive(e)||i.isPrimitive(n))return e===n;if(t&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(n))return!1;var r=Q(e),l=Q(n);if(r&&!l||!r&&l)return!1;if(r)return e=a.call(e),n=a.call(n),F(e,n,t);var o,u,s=X(e),d=X(n);if(s.length!==d.length)return!1;for(s.sort(),d.sort(),u=s.length-1;u>=0;u--)if(s[u]!==d[u])return!1;for(u=s.length-1;u>=0;u--)if(o=s[u],!F(e[o],n[o],t,c))return!1;return!0}(e,n,t,c))}return t?e===n:e==n}function Q(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function Z(e,n){if(!e||!n)return!1;if("[object RegExp]"==Object.prototype.toString.call(n))return n.test(e);try{if(e instanceof n)return!0}catch(t){}return!Error.isPrototypeOf(n)&&!0===n.call({},e)}function G(e,n,t,c){var r;if("function"!==typeof n)throw new TypeError('"block" argument must be a function');"string"===typeof t&&(c=t,t=null),r=function(e){var n;try{e()}catch(t){n=t}return n}(n),c=(t&&t.name?" ("+t.name+").":".")+(c?" "+c:"."),e&&!r&&p(r,t,"Missing expected exception"+c);var l="string"===typeof c,o=!e&&r&&!t;if((!e&&i.isError(r)&&l&&Z(r,t)||o)&&p(r,t,"Got unwanted exception"+c),e&&r&&t&&!Z(r,t)||!e&&r)throw r}B.AssertionError=function(e){var n;this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=m(I((n=this).actual),128)+" "+n.operator+" "+m(I(n.expected),128),this.generatedMessage=!0);var t=e.stackStartFunction||p;if(Error.captureStackTrace)Error.captureStackTrace(this,t);else{var c=new Error;if(c.stack){var r=c.stack,l=b(t),i=r.indexOf("\n"+l);if(i>=0){var o=r.indexOf("\n",i+1);r=r.substring(o+1)}this.stack=r}}},i.inherits(B.AssertionError,Error),B.fail=p,B.ok=y,B.equal=function(e,n,t){e!=n&&p(e,n,t,"==",B.equal)},B.notEqual=function(e,n,t){e==n&&p(e,n,t,"!=",B.notEqual)},B.deepEqual=function(e,n,t){F(e,n,!1)||p(e,n,t,"deepEqual",B.deepEqual)},B.deepStrictEqual=function(e,n,t){F(e,n,!0)||p(e,n,t,"deepStrictEqual",B.deepStrictEqual)},B.notDeepEqual=function(e,n,t){F(e,n,!1)&&p(e,n,t,"notDeepEqual",B.notDeepEqual)},B.notDeepStrictEqual=function e(n,t,c){F(n,t,!0)&&p(n,t,c,"notDeepStrictEqual",e)},B.strictEqual=function(e,n,t){e!==n&&p(e,n,t,"===",B.strictEqual)},B.notStrictEqual=function(e,n,t){e===n&&p(e,n,t,"!==",B.notStrictEqual)},B.throws=function(e,n,t){G(!0,e,n,t)},B.doesNotThrow=function(e,n,t){G(!1,e,n,t)},B.ifError=function(e){if(e)throw e},B.strict=c((function e(n,t){n||p(n,!0,t,"==",e)}),B,{equal:B.strictEqual,deepEqual:B.deepStrictEqual,notEqual:B.notStrictEqual,notDeepEqual:B.notDeepStrictEqual}),B.strict.strict=B.strict;var X=Object.keys||function(e){var n=[];for(var t in e)o.call(e,t)&&n.push(t);return n}}).call(this,t("./node_modules/webpack/buildin/global.js"))},"./node_modules/dct/index.js":function(e,n,t){e.exports=t("./node_modules/dct/src/dct.js")},"./node_modules/dct/src/dct.js":function(e,n){cosMap=null;var t=function(e){cosMap=cosMap||{},cosMap[e]=new Array(e*e);for(var n=Math.PI/e,t=0;t<e;t++)for(var c=0;c<e;c++)cosMap[e][c+t*e]=Math.cos(n*(c+.5)*t)};e.exports=function(e,n){var c=e.length;return n=n||2,cosMap&&cosMap[c]||t(c),e.map((function(){return 0})).map((function(t,r){return n*e.reduce((function(e,n,t,l){return e+n*cosMap[c][t+r*c]}),0)}))}},"./node_modules/fftjs/dist/fft.js":function(e,n,t){"use strict";var c=t("./node_modules/fftjs/dist/utils.js"),r=function(e){var n={};void 0===e.real||void 0===e.imag?n=c.constructComplexArray(e):(n.real=e.real.slice(),n.imag=e.imag.slice());var t=n.real.length,r=Math.log2(t);if(Math.round(r)!=r)throw new Error("Input size must be a power of 2.");if(n.real.length!=n.imag.length)throw new Error("Real and imaginary components must have the same length.");for(var l=c.bitReverseArray(t),i={real:[],imag:[]},o=0;o<t;o++)i.real[l[o]]=n.real[o],i.imag[l[o]]=n.imag[o];for(var a=0;a<t;a++)n.real[a]=i.real[a],n.imag[a]=i.imag[a];for(var u=1;u<=r;u++)for(var s=Math.pow(2,u),d=0;d<s/2;d++)for(var B=c.euler(d,s),g=0;g<t/s;g++){var b=s*g+d,m=s*g+d+s/2,I={real:n.real[b],imag:n.imag[b]},p={real:n.real[m],imag:n.imag[m]},y=c.multiply(B,p),F=c.subtract(I,y);n.real[m]=F.real,n.imag[m]=F.imag;var Q=c.add(y,I);n.real[b]=Q.real,n.imag[b]=Q.imag}return n};e.exports={fft:r,ifft:function(e){if(void 0===e.real||void 0===e.imag)throw new Error("IFFT only accepts a complex input.");for(var n=e.real.length,t={real:[],imag:[]},l=0;l<n;l++){var i={real:e.real[l],imag:e.imag[l]},o=c.conj(i);t.real[l]=o.real,t.imag[l]=o.imag}var a=r(t);return t.real=a.real.map((function(e){return e/n})),t.imag=a.imag.map((function(e){return e/n})),t}}},"./node_modules/fftjs/dist/utils.js":function(e,n,t){"use strict";function c(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}var r={},l={};e.exports={bitReverseArray:function(e){if(void 0===r[e]){for(var n=(e-1).toString(2).length,t="0".repeat(n),l={},i=0;i<e;i++){var o=i.toString(2);o=t.substr(o.length)+o,o=[].concat(c(o)).reverse().join(""),l[i]=parseInt(o,2)}r[e]=l}return r[e]},multiply:function(e,n){return{real:e.real*n.real-e.imag*n.imag,imag:e.real*n.imag+e.imag*n.real}},add:function(e,n){return{real:e.real+n.real,imag:e.imag+n.imag}},subtract:function(e,n){return{real:e.real-n.real,imag:e.imag-n.imag}},euler:function(e,n){var t=-2*Math.PI*e/n;return{real:Math.cos(t),imag:Math.sin(t)}},conj:function(e){return e.imag*=-1,e},constructComplexArray:function(e){var n={};n.real=void 0===e.real?e.slice():e.real.slice();var t=n.real.length;return void 0===l[t]&&(l[t]=Array.apply(null,Array(t)).map(Number.prototype.valueOf,0)),n.imag=l[t].slice(),n}}},"./node_modules/meyda/dist/node/extractors/chroma.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){if("object"!==c(e.ampSpectrum))throw new TypeError("Valid ampSpectrum is required to generate chroma");if("object"!==c(e.chromaFilterBank))throw new TypeError("Valid chromaFilterBank is required to generate chroma");var n,t=e.chromaFilterBank.map((function(n,t){return e.ampSpectrum.reduce((function(e,t,c){return e+t*n[c]}),0)})),r=Math.max.apply(Math,function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(n=t)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}());return r?t.map((function(e){return e/r})):t},e.exports=n.default},"./node_modules/meyda/dist/node/extractors/energy.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if("object"!==c(arguments[0].signal))throw new TypeError;for(var e=0,n=0;n<arguments[0].signal.length;n++)e+=Math.pow(Math.abs(arguments[0].signal[n]),2);return e},function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t)){var c=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,t):{};c.get||c.set?Object.defineProperty(n,t,c):n[t]=e[t]}n.default=e}(t("./node_modules/assert/assert.js")),e.exports=n.default},"./node_modules/meyda/dist/node/extractors/extractorUtilities.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.mu=function(e,n){for(var t=0,c=0,r=0;r<n.length;r++)t+=Math.pow(r,e)*Math.abs(n[r]),c+=n[r];return t/c}},"./node_modules/meyda/dist/node/extractors/loudness.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){if("object"!==c(e.ampSpectrum)||"object"!==c(e.barkScale))throw new TypeError;var n=new Float32Array(24),t=0,r=e.ampSpectrum,l=new Int32Array(25);l[0]=0;for(var i=e.barkScale[r.length-1]/24,o=1,a=0;a<r.length;a++)for(;e.barkScale[a]>i;)l[o++]=a,i=o*e.barkScale[r.length-1]/24;l[24]=r.length-1;for(var u=0;u<24;u++){for(var s=0,d=l[u];d<l[u+1];d++)s+=r[d];n[u]=Math.pow(s,.23)}for(var B=0;B<n.length;B++)t+=n[B];return{specific:n,total:t}},e.exports=n.default},"./node_modules/meyda/dist/node/extractors/mfcc.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){if("object"!==l(e.ampSpectrum))throw new TypeError("Valid ampSpectrum is required to generate MFCC");if("object"!==l(e.melFilterBank))throw new TypeError("Valid melFilterBank is required to generate MFCC");var n=Math.min(40,Math.max(1,e.numberOfMFCCCoefficients||13)),t=(0,c.default)(e),r=e.melFilterBank.length,o=Array(r);if(r<n)throw new Error("Insufficient filter bank for requested number of coefficients");for(var a=new Float32Array(r),u=0;u<a.length;u++){o[u]=new Float32Array(e.bufferSize/2),a[u]=0;for(var s=0;s<e.bufferSize/2;s++)o[u][s]=e.melFilterBank[u][s]*t[s],a[u]+=o[u][s];a[u]=Math.log(a[u]+1)}var d=Array.prototype.slice.call(a);return i(d).slice(0,n)};var c=r(t("./node_modules/meyda/dist/node/extractors/powerSpectrum.js"));function r(e){return e&&e.__esModule?e:{default:e}}function l(e){return(l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r(t("./node_modules/meyda/dist/node/utilities.js"));var i=t("./node_modules/dct/index.js");e.exports=n.default},"./node_modules/meyda/dist/node/extractors/perceptualSharpness.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if("object"!==l(arguments[0].signal))throw new TypeError;for(var e=(0,r.default)(arguments[0]),n=e.specific,t=0,c=0;c<n.length;c++)t+=c<15?(c+1)*n[c+1]:.066*Math.exp(.171*(c+1));return t*=.11/e.total};var c,r=(c=t("./node_modules/meyda/dist/node/extractors/loudness.js"))&&c.__esModule?c:{default:c};function l(e){return(l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=n.default},"./node_modules/meyda/dist/node/extractors/perceptualSpread.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if("object"!==l(arguments[0].signal))throw new TypeError;for(var e=(0,r.default)(arguments[0]),n=0,t=0;t<e.specific.length;t++)e.specific[t]>n&&(n=e.specific[t]);return Math.pow((e.total-n)/e.total,2)};var c,r=(c=t("./node_modules/meyda/dist/node/extractors/loudness.js"))&&c.__esModule?c:{default:c};function l(e){return(l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=n.default},"./node_modules/meyda/dist/node/extractors/powerSpectrum.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if("object"!==c(arguments[0].ampSpectrum))throw new TypeError;for(var e=new Float32Array(arguments[0].ampSpectrum.length),n=0;n<e.length;n++)e[n]=Math.pow(arguments[0].ampSpectrum[n],2);return e},e.exports=n.default},"./node_modules/meyda/dist/node/extractors/rms.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){if("object"!==c(e.signal))throw new TypeError;for(var n=0,t=0;t<e.signal.length;t++)n+=Math.pow(e.signal[t],2);return n/=e.signal.length,n=Math.sqrt(n)},e.exports=n.default},"./node_modules/meyda/dist/node/extractors/spectralCentroid.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if("object"!==r(arguments[0].ampSpectrum))throw new TypeError;return(0,c.mu)(1,arguments[0].ampSpectrum)};var c=t("./node_modules/meyda/dist/node/extractors/extractorUtilities.js");function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=n.default},"./node_modules/meyda/dist/node/extractors/spectralFlatness.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if("object"!==c(arguments[0].ampSpectrum))throw new TypeError;for(var e=0,n=0,t=0;t<arguments[0].ampSpectrum.length;t++)e+=Math.log(arguments[0].ampSpectrum[t]),n+=arguments[0].ampSpectrum[t];return Math.exp(e/arguments[0].ampSpectrum.length)*arguments[0].ampSpectrum.length/n},e.exports=n.default},"./node_modules/meyda/dist/node/extractors/spectralFlux.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){if("object"!==c(e.signal)||"object"!=c(e.previousSignal))throw new TypeError;for(var n=0,t=-e.bufferSize/2;t<signal.length/2-1;t++)x=Math.abs(e.signal[t])-Math.abs(e.previousSignal[t]),n+=(x+Math.abs(x))/2;return n},e.exports=n.default},"./node_modules/meyda/dist/node/extractors/spectralKurtosis.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if("object"!==r(arguments[0].ampSpectrum))throw new TypeError;var e=arguments[0].ampSpectrum,n=(0,c.mu)(1,e),t=(0,c.mu)(2,e),l=(0,c.mu)(3,e),i=(0,c.mu)(4,e),o=-3*Math.pow(n,4)+6*n*t-4*n*l+i,a=Math.pow(Math.sqrt(t-Math.pow(n,2)),4);return o/a};var c=t("./node_modules/meyda/dist/node/extractors/extractorUtilities.js");function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=n.default},"./node_modules/meyda/dist/node/extractors/spectralRolloff.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if("object"!==c(arguments[0].ampSpectrum))throw new TypeError;for(var e=arguments[0].ampSpectrum,n=arguments[0].sampleRate/(2*(e.length-1)),t=0,r=0;r<e.length;r++)t+=e[r];for(var l=.99*t,i=e.length-1;t>l&&i>=0;)t-=e[i],--i;return(i+1)*n},e.exports=n.default},"./node_modules/meyda/dist/node/extractors/spectralSkewness.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){if("object"!==r(e.ampSpectrum))throw new TypeError;var n=(0,c.mu)(1,e.ampSpectrum),t=(0,c.mu)(2,e.ampSpectrum),l=(0,c.mu)(3,e.ampSpectrum),i=2*Math.pow(n,3)-3*n*t+l,o=Math.pow(Math.sqrt(t-Math.pow(n,2)),3);return i/o};var c=t("./node_modules/meyda/dist/node/extractors/extractorUtilities.js");function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=n.default},"./node_modules/meyda/dist/node/extractors/spectralSlope.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){if("object"!==c(e.ampSpectrum))throw new TypeError;for(var n=0,t=0,r=new Float32Array(e.ampSpectrum.length),l=0,i=0,o=0;o<e.ampSpectrum.length;o++){n+=e.ampSpectrum[o];var a=o*e.sampleRate/e.bufferSize;r[o]=a,l+=a*a,t+=a,i+=a*e.ampSpectrum[o]}return(e.ampSpectrum.length*i-t*n)/(n*(l-Math.pow(t,2)))},e.exports=n.default},"./node_modules/meyda/dist/node/extractors/spectralSpread.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){if("object"!==r(e.ampSpectrum))throw new TypeError;return Math.sqrt((0,c.mu)(2,e.ampSpectrum)-Math.pow((0,c.mu)(1,e.ampSpectrum),2))};var c=t("./node_modules/meyda/dist/node/extractors/extractorUtilities.js");function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=n.default},"./node_modules/meyda/dist/node/extractors/zcr.js":function(e,n,t){"use strict";function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if("object"!==c(arguments[0].signal))throw new TypeError;for(var e=0,n=0;n<arguments[0].signal.length;n++)(arguments[0].signal[n]>=0&&arguments[0].signal[n+1]<0||arguments[0].signal[n]<0&&arguments[0].signal[n+1]>=0)&&e++;return e},e.exports=n.default},"./node_modules/meyda/dist/node/featureExtractors.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"rms",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(n,"energy",{enumerable:!0,get:function(){return r.default}}),Object.defineProperty(n,"spectralSlope",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(n,"spectralCentroid",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(n,"spectralRolloff",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(n,"spectralFlatness",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(n,"spectralSpread",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(n,"spectralSkewness",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(n,"spectralKurtosis",{enumerable:!0,get:function(){return d.default}}),Object.defineProperty(n,"zcr",{enumerable:!0,get:function(){return B.default}}),Object.defineProperty(n,"loudness",{enumerable:!0,get:function(){return g.default}}),Object.defineProperty(n,"perceptualSpread",{enumerable:!0,get:function(){return b.default}}),Object.defineProperty(n,"perceptualSharpness",{enumerable:!0,get:function(){return m.default}}),Object.defineProperty(n,"mfcc",{enumerable:!0,get:function(){return I.default}}),Object.defineProperty(n,"chroma",{enumerable:!0,get:function(){return p.default}}),Object.defineProperty(n,"powerSpectrum",{enumerable:!0,get:function(){return y.default}}),Object.defineProperty(n,"spectralFlux",{enumerable:!0,get:function(){return F.default}}),n.amplitudeSpectrum=n.complexSpectrum=n.buffer=void 0;var c=Q(t("./node_modules/meyda/dist/node/extractors/rms.js")),r=Q(t("./node_modules/meyda/dist/node/extractors/energy.js")),l=Q(t("./node_modules/meyda/dist/node/extractors/spectralSlope.js")),i=Q(t("./node_modules/meyda/dist/node/extractors/spectralCentroid.js")),o=Q(t("./node_modules/meyda/dist/node/extractors/spectralRolloff.js")),a=Q(t("./node_modules/meyda/dist/node/extractors/spectralFlatness.js")),u=Q(t("./node_modules/meyda/dist/node/extractors/spectralSpread.js")),s=Q(t("./node_modules/meyda/dist/node/extractors/spectralSkewness.js")),d=Q(t("./node_modules/meyda/dist/node/extractors/spectralKurtosis.js")),B=Q(t("./node_modules/meyda/dist/node/extractors/zcr.js")),g=Q(t("./node_modules/meyda/dist/node/extractors/loudness.js")),b=Q(t("./node_modules/meyda/dist/node/extractors/perceptualSpread.js")),m=Q(t("./node_modules/meyda/dist/node/extractors/perceptualSharpness.js")),I=Q(t("./node_modules/meyda/dist/node/extractors/mfcc.js")),p=Q(t("./node_modules/meyda/dist/node/extractors/chroma.js")),y=Q(t("./node_modules/meyda/dist/node/extractors/powerSpectrum.js")),F=Q(t("./node_modules/meyda/dist/node/extractors/spectralFlux.js"));function Q(e){return e&&e.__esModule?e:{default:e}}n.buffer=function(e){return e.signal},n.complexSpectrum=function(e){return e.complexSpectrum},n.amplitudeSpectrum=function(e){return e.ampSpectrum}},"./node_modules/meyda/dist/node/main.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var c=o(t("./node_modules/meyda/dist/node/utilities.js")),r=o(t("./node_modules/meyda/dist/node/featureExtractors.js")),l=t("./node_modules/fftjs/dist/fft.js"),i=t("./node_modules/meyda/dist/node/meyda-wa.js");function o(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t)){var c=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,t):{};c.get||c.set?Object.defineProperty(n,t,c):n[t]=e[t]}return n.default=e,n}function a(e){return(a="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var u={audioContext:null,spn:null,bufferSize:512,sampleRate:44100,melBands:26,chromaBands:12,callback:null,windowingFunction:"hanning",featureExtractors:r,EXTRACTION_STARTED:!1,numberOfMFCCCoefficients:13,_featuresToExtract:[],windowing:c.applyWindow,_errors:{notPow2:new Error("Meyda: Buffer size must be a power of 2, e.g. 64 or 512"),featureUndef:new Error("Meyda: No features defined."),invalidFeatureFmt:new Error("Meyda: Invalid feature format"),invalidInput:new Error("Meyda: Invalid input."),noAC:new Error("Meyda: No AudioContext specified."),noSource:new Error("Meyda: No source node specified.")},createMeydaAnalyzer:function(e){return new i.MeydaAnalyzer(e,u)},extract:function(e,n,t){var r=this;if(!n)throw this._errors.invalidInput;if("object"!=a(n))throw this._errors.invalidInput;if(!e)throw this._errors.featureUndef;if(!c.isPowerOfTwo(n.length))throw this._errors.notPow2;"undefined"!=typeof this.barkScale&&this.barkScale.length==this.bufferSize||(this.barkScale=c.createBarkScale(this.bufferSize,this.sampleRate,this.bufferSize)),"undefined"!=typeof this.melFilterBank&&this.barkScale.length==this.bufferSize&&this.melFilterBank.length==this.melBands||(this.melFilterBank=c.createMelFilterBank(Math.max(this.melBands,this.numberOfMFCCCoefficients),this.sampleRate,this.bufferSize)),"undefined"!=typeof this.chromaFilterBank&&this.chromaFilterBank.length==this.chromaBands||(this.chromaFilterBank=c.createChromaFilterBank(this.chromaBands,this.sampleRate,this.bufferSize)),"undefined"==typeof n.buffer?this.signal=c.arrayToTyped(n):this.signal=n;var l=s(n,this.windowingFunction,this.bufferSize);if(this.signal=l.windowedSignal,this.complexSpectrum=l.complexSpectrum,this.ampSpectrum=l.ampSpectrum,t){var i=s(t,this.windowingFunction,this.bufferSize);this.previousSignal=i.windowedSignal,this.previousComplexSpectrum=i.complexSpectrum,this.previousAmpSpectrum=i.ampSpectrum}var o=function(e){return r.featureExtractors[e]({ampSpectrum:r.ampSpectrum,chromaFilterBank:r.chromaFilterBank,complexSpectrum:r.complexSpectrum,signal:r.signal,bufferSize:r.bufferSize,sampleRate:r.sampleRate,barkScale:r.barkScale,melFilterBank:r.melFilterBank,previousSignal:r.previousSignal,previousAmpSpectrum:r.previousAmpSpectrum,previousComplexSpectrum:r.previousComplexSpectrum,numberOfMFCCCoefficients:r.numberOfMFCCCoefficients})};if("object"===a(e))return e.reduce((function(e,n){return Object.assign({},e,(t={},c=n,r=o(n),c in t?Object.defineProperty(t,c,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[c]=r,t));var t,c,r}),{});if("string"===typeof e)return o(e);throw this._errors.invalidFeatureFmt}},s=function(e,n,t){var r={};"undefined"==typeof e.buffer?r.signal=c.arrayToTyped(e):r.signal=e,r.windowedSignal=c.applyWindow(r.signal,n),r.complexSpectrum=(0,l.fft)(r.windowedSignal),r.ampSpectrum=new Float32Array(t/2);for(var i=0;i<t/2;i++)r.ampSpectrum[i]=Math.sqrt(Math.pow(r.complexSpectrum.real[i],2)+Math.pow(r.complexSpectrum.imag[i],2));return r},d=u;n.default=d,"undefined"!==typeof window&&(window.Meyda=u),e.exports=n.default},"./node_modules/meyda/dist/node/meyda-wa.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.MeydaAnalyzer=void 0;var c=l(t("./node_modules/meyda/dist/node/utilities.js")),r=l(t("./node_modules/meyda/dist/node/featureExtractors.js"));function l(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t)){var c=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,t):{};c.get||c.set?Object.defineProperty(n,t,c):n[t]=e[t]}return n.default=e,n}function i(e,n){for(var t=0;t<n.length;t++){var c=n[t];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}var o=function(){function e(n,t){var l=this;if(function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this._m=t,!n.audioContext)throw this._m.errors.noAC;if(n.bufferSize&&!c.isPowerOfTwo(n.bufferSize))throw this._m._errors.notPow2;if(!n.source)throw this._m._errors.noSource;this._m.audioContext=n.audioContext,this._m.bufferSize=n.bufferSize||this._m.bufferSize||256,this._m.hopSize=n.hopSize||this._m.hopSize||this._m.bufferSize,this._m.sampleRate=n.sampleRate||this._m.audioContext.sampleRate||44100,this._m.callback=n.callback,this._m.windowingFunction=n.windowingFunction||"hanning",this._m.featureExtractors=r,this._m.EXTRACTION_STARTED=n.startImmediately||!1,this._m.spn=this._m.audioContext.createScriptProcessor(this._m.bufferSize,1,1),this._m.spn.connect(this._m.audioContext.destination),this._m._featuresToExtract=n.featureExtractors||[],this._m.barkScale=c.createBarkScale(this._m.bufferSize,this._m.sampleRate,this._m.bufferSize),this._m.melFilterBank=c.createMelFilterBank(this._m.melBands,this._m.sampleRate,this._m.bufferSize),this._m.inputData=null,this._m.previousInputData=null,this._m.frame=null,this._m.previousFrame=null,this.setSource(n.source),this._m.spn.onaudioprocess=function(e){if(null!==l._m.inputData&&(l._m.previousInputData=l._m.inputData),l._m.inputData=e.inputBuffer.getChannelData(0),l._m.previousInputData)(n=new Float32Array(l._m.previousInputData.length+l._m.inputData.length-l._m.hopSize)).set(l._m.previousInputData.slice(l._m.hopSize)),n.set(l._m.inputData,l._m.previousInputData.length-l._m.hopSize);else var n=l._m.inputData;c.frame(n,l._m.bufferSize,l._m.hopSize).forEach((function(e){l._m.frame=e;var n=l._m.extract(l._m._featuresToExtract,l._m.frame,l._m.previousFrame);"function"===typeof l._m.callback&&l._m.EXTRACTION_STARTED&&l._m.callback(n),l._m.previousFrame=l._m.frame}))}}var n,t,l;return n=e,(t=[{key:"start",value:function(e){this._m._featuresToExtract=e||this._m._featuresToExtract,this._m.EXTRACTION_STARTED=!0}},{key:"stop",value:function(){this._m.EXTRACTION_STARTED=!1}},{key:"setSource",value:function(e){e.connect(this._m.spn)}},{key:"get",value:function(e){return this._m.inputData?this._m.extract(e||this._m._featuresToExtract,this._m.inputData,this._m.previousInputData):null}}])&&i(n.prototype,t),l&&i(n,l),e}();n.MeydaAnalyzer=o},"./node_modules/meyda/dist/node/utilities.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.isPowerOfTwo=function(e){for(;e%2===0&&e>1;)e/=2;return 1===e},n.error=function(e){throw new Error("Meyda: "+e)},n.pointwiseBufferMult=i,n.applyWindow=function(e,n){if("rect"!==n){if(""!==n&&n||(n="hanning"),l[n]||(l[n]={}),!l[n][e.length])try{l[n][e.length]=c[n](e.length)}catch(t){throw new Error("Invalid windowing function")}e=i(e,l[n][e.length])}return e},n.createBarkScale=function(e,n,t){for(var c=new Float32Array(e),r=0;r<c.length;r++)c[r]=r*n/t,c[r]=13*Math.atan(c[r]/1315.8)+3.5*Math.atan(Math.pow(c[r]/7518,2));return c},n.typedToArray=function(e){return Array.prototype.slice.call(e)},n.arrayToTyped=function(e){return Float32Array.from(e)},n._normalize=o,n.normalize=function(e,n){return e.map((function(e){return o(e,n)}))},n.normalizeToOne=function(e){var n=Math.max.apply(null,e);return e.map((function(e){return e/n}))},n.mean=function(e){return e.reduce((function(e,n){return e+n}))/e.length},n.melToFreq=function(e){return a(e)},n.freqToMel=function(e){return u(e)},n.createMelFilterBank=function(e,n,t){for(var c=new Float32Array(e+2),r=new Float32Array(e+2),l=n/2,i=u(0),o=(u(l)-i)/(e+1),s=Array(e+2),d=0;d<c.length;d++)c[d]=d*o,r[d]=a(c[d]),s[d]=Math.floor((t+1)*r[d]/n);for(var B=Array(e),g=0;g<B.length;g++){B[g]=Array.apply(null,new Array(t/2+1)).map(Number.prototype.valueOf,0);for(var b=s[g];b<s[g+1];b++)B[g][b]=(b-s[g])/(s[g+1]-s[g]);for(var m=s[g+1];m<s[g+2];m++)B[g][m]=(s[g+2]-m)/(s[g+2]-s[g+1])}return B},n.hzToOctaves=s,n.normalizeByColumn=d,n.createChromaFilterBank=function(e,n,t){var c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2,i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:440,a=Math.floor(t/2)+1,u=new Array(t).fill(0).map((function(c,r){return e*s(n*r/t,o)}));u[0]=u[1]-1.5*e;var B=u.slice(1).map((function(e,n){return Math.max(e-u[n])}),1).concat([1]),g=Math.round(e/2),b=new Array(e).fill(0).map((function(n,t){return u.map((function(n){return(10*e+g+n-t)%e-g}))})),m=b.map((function(e,n){return e.map((function(e,t){return Math.exp(-.5*Math.pow(2*b[n][t]/B[t],2))}))}));if(m=d(m),l){var I=u.map((function(n){return Math.exp(-.5*Math.pow((n/e-c)/l,2))}));m=m.map((function(e){return e.map((function(e,n){return e*I[n]}))}))}return i&&(m=r(m.slice(3)).concat(r(m.slice(0,3)))),m.map((function(e){return e.slice(0,a)}))},n.frame=function(e,n,t){if(e.length<n)throw new Error("Buffer is too short for frame length");if(t<1)throw new Error("Hop length cannot be less that 1");if(n<1)throw new Error("Frame length cannot be less that 1");var c=1+Math.floor((e.length-n)/t);return new Array(c).fill(0).map((function(c,r){return e.slice(r*t,r*t+n)}))};var c=function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t)){var c=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,t):{};c.get||c.set?Object.defineProperty(n,t,c):n[t]=e[t]}return n.default=e,n}(t("./node_modules/meyda/dist/node/windowing.js"));function r(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var l={};function i(e,n){for(var t=[],c=0;c<Math.min(e.length,n.length);c++)t[c]=e[c]*n[c];return t}function o(e,n){return e/n}function a(e){return 700*(Math.exp(e/1125)-1)}function u(e){return 1125*Math.log(1+e/700)}function s(e,n){return Math.log2(16*e/n)}function d(e){var n=e[0].map((function(){return 0})),t=e.reduce((function(e,n){return n.forEach((function(n,t){e[t]+=Math.pow(n,2)})),e}),n).map(Math.sqrt);return e.map((function(e,n){return e.map((function(e,n){return e/(t[n]||1)}))}))}},"./node_modules/meyda/dist/node/windowing.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.blackman=function(e){for(var n=new Float32Array(e),t=2*Math.PI/(e-1),c=2*t,r=0;r<e/2;r++)n[r]=.42-.5*Math.cos(r*t)+.08*Math.cos(r*c);for(var l=e/2;l>0;l--)n[e-l]=n[l-1];return n},n.sine=function(e){for(var n=Math.PI/(e-1),t=new Float32Array(e),c=0;c<e;c++)t[c]=Math.sin(n*c);return t},n.hanning=function(e){for(var n=new Float32Array(e),t=0;t<e;t++)n[t]=.5-.5*Math.cos(2*Math.PI*t/(e-1));return n},n.hamming=function(e){for(var n=new Float32Array(e),t=0;t<e;t++)n[t]=.54-.46*Math.cos(2*Math.PI*(t/e-1));return n}},"./node_modules/meyda/src/extractors/chroma.js":function(e,n,t){"use strict";t.r(n),n.default=function(e){if("object"!==typeof e.ampSpectrum)throw new TypeError("Valid ampSpectrum is required to generate chroma");if("object"!==typeof e.chromaFilterBank)throw new TypeError("Valid chromaFilterBank is required to generate chroma");var n=e.chromaFilterBank.map((function(n,t){return e.ampSpectrum.reduce((function(e,t,c){return e+t*n[c]}),0)})),t=Math.max.apply(Math,r(n));return t?n.map((function(e){return e/t})):n}},"./node_modules/meyda/src/extractors/energy.js":function(e,n,t){"use strict";t.r(n),t("./node_modules/assert/assert.js"),n.default=function(){if("object"!==typeof arguments[0].signal)throw new TypeError;for(var e=0,n=0;n<arguments[0].signal.length;n++)e+=Math.pow(Math.abs(arguments[0].signal[n]),2);return e}},"./node_modules/meyda/src/extractors/extractorUtilities.js":function(e,n,t){"use strict";function c(e,n){for(var t=0,c=0,r=0;r<n.length;r++)t+=Math.pow(r,e)*Math.abs(n[r]),c+=n[r];return t/c}t.r(n),t.d(n,"mu",(function(){return c}))},"./node_modules/meyda/src/extractors/loudness.js":function(e,n,t){"use strict";t.r(n),n.default=function(e){if("object"!==typeof e.ampSpectrum||"object"!==typeof e.barkScale)throw new TypeError;var n=new Float32Array(24),t=0,c=e.ampSpectrum,r=new Int32Array(25);r[0]=0;for(var l=e.barkScale[c.length-1]/24,i=1,o=0;o<c.length;o++)for(;e.barkScale[o]>l;)r[i++]=o,l=i*e.barkScale[c.length-1]/24;r[24]=c.length-1;for(var a=0;a<24;a++){for(var u=0,s=r[a];s<r[a+1];s++)u+=c[s];n[a]=Math.pow(u,.23)}for(var d=0;d<n.length;d++)t+=n[d];return{specific:n,total:t}}},"./node_modules/meyda/src/extractors/mfcc.js":function(e,n,t){"use strict";t.r(n);var c=t("./node_modules/meyda/src/extractors/powerSpectrum.js"),r=(t("./node_modules/meyda/src/utilities.js"),t("./node_modules/dct/index.js"));n.default=function(e){if("object"!==typeof e.ampSpectrum)throw new TypeError("Valid ampSpectrum is required to generate MFCC");if("object"!==typeof e.melFilterBank)throw new TypeError("Valid melFilterBank is required to generate MFCC");var n=Math.min(40,Math.max(1,e.numberOfMFCCCoefficients||13)),t=Object(c.default)(e),l=e.melFilterBank.length,i=Array(l);if(l<n)throw new Error("Insufficient filter bank for requested number of coefficients");for(var o=new Float32Array(l),a=0;a<o.length;a++){i[a]=new Float32Array(e.bufferSize/2),o[a]=0;for(var u=0;u<e.bufferSize/2;u++)i[a][u]=e.melFilterBank[a][u]*t[u],o[a]+=i[a][u];o[a]=Math.log(o[a]+1)}var s=Array.prototype.slice.call(o);return r(s).slice(0,n)}},"./node_modules/meyda/src/extractors/perceptualSharpness.js":function(e,n,t){"use strict";t.r(n);var c=t("./node_modules/meyda/src/extractors/loudness.js");n.default=function(){if("object"!==typeof arguments[0].signal)throw new TypeError;for(var e=Object(c.default)(arguments[0]),n=e.specific,t=0,r=0;r<n.length;r++)t+=r<15?(r+1)*n[r+1]:.066*Math.exp(.171*(r+1));return t*=.11/e.total}},"./node_modules/meyda/src/extractors/perceptualSpread.js":function(e,n,t){"use strict";t.r(n);var c=t("./node_modules/meyda/src/extractors/loudness.js");n.default=function(){if("object"!==typeof arguments[0].signal)throw new TypeError;for(var e=Object(c.default)(arguments[0]),n=0,t=0;t<e.specific.length;t++)e.specific[t]>n&&(n=e.specific[t]);var r=Math.pow((e.total-n)/e.total,2);return r}},"./node_modules/meyda/src/extractors/powerSpectrum.js":function(e,n,t){"use strict";t.r(n),n.default=function(){if("object"!==typeof arguments[0].ampSpectrum)throw new TypeError;for(var e=new Float32Array(arguments[0].ampSpectrum.length),n=0;n<e.length;n++)e[n]=Math.pow(arguments[0].ampSpectrum[n],2);return e}},"./node_modules/meyda/src/extractors/rms.js":function(e,n,t){"use strict";t.r(n),n.default=function(e){if("object"!==typeof e.signal)throw new TypeError;for(var n=0,t=0;t<e.signal.length;t++)n+=Math.pow(e.signal[t],2);return n/=e.signal.length,n=Math.sqrt(n)}},"./node_modules/meyda/src/extractors/spectralCentroid.js":function(e,n,t){"use strict";t.r(n);var c=t("./node_modules/meyda/src/extractors/extractorUtilities.js");n.default=function(){if("object"!==typeof arguments[0].ampSpectrum)throw new TypeError;return Object(c.mu)(1,arguments[0].ampSpectrum)}},"./node_modules/meyda/src/extractors/spectralFlatness.js":function(e,n,t){"use strict";t.r(n),n.default=function(){if("object"!==typeof arguments[0].ampSpectrum)throw new TypeError;for(var e=0,n=0,t=0;t<arguments[0].ampSpectrum.length;t++)e+=Math.log(arguments[0].ampSpectrum[t]),n+=arguments[0].ampSpectrum[t];return Math.exp(e/arguments[0].ampSpectrum.length)*arguments[0].ampSpectrum.length/n}},"./node_modules/meyda/src/extractors/spectralFlux.js":function(e,n,t){"use strict";t.r(n),n.default=function(e){if("object"!==typeof e.signal||"object"!=typeof e.previousSignal)throw new TypeError;for(var n=0,t=-e.bufferSize/2;t<signal.length/2-1;t++)x=Math.abs(e.signal[t])-Math.abs(e.previousSignal[t]),n+=(x+Math.abs(x))/2;return n}},"./node_modules/meyda/src/extractors/spectralKurtosis.js":function(e,n,t){"use strict";t.r(n);var c=t("./node_modules/meyda/src/extractors/extractorUtilities.js");n.default=function(){if("object"!==typeof arguments[0].ampSpectrum)throw new TypeError;var e=arguments[0].ampSpectrum,n=Object(c.mu)(1,e),t=Object(c.mu)(2,e),r=Object(c.mu)(3,e),l=Object(c.mu)(4,e),i=-3*Math.pow(n,4)+6*n*t-4*n*r+l,o=Math.pow(Math.sqrt(t-Math.pow(n,2)),4);return i/o}},"./node_modules/meyda/src/extractors/spectralRolloff.js":function(e,n,t){"use strict";t.r(n),n.default=function(){if("object"!==typeof arguments[0].ampSpectrum)throw new TypeError;for(var e=arguments[0].ampSpectrum,n=arguments[0].sampleRate/(2*(e.length-1)),t=0,c=0;c<e.length;c++)t+=e[c];for(var r=.99*t,l=e.length-1;t>r&&l>=0;)t-=e[l],--l;return(l+1)*n}},"./node_modules/meyda/src/extractors/spectralSkewness.js":function(e,n,t){"use strict";t.r(n);var c=t("./node_modules/meyda/src/extractors/extractorUtilities.js");n.default=function(e){if("object"!==typeof e.ampSpectrum)throw new TypeError;var n=Object(c.mu)(1,e.ampSpectrum),t=Object(c.mu)(2,e.ampSpectrum),r=Object(c.mu)(3,e.ampSpectrum);return(2*Math.pow(n,3)-3*n*t+r)/Math.pow(Math.sqrt(t-Math.pow(n,2)),3)}},"./node_modules/meyda/src/extractors/spectralSlope.js":function(e,n,t){"use strict";t.r(n),n.default=function(e){if("object"!==typeof e.ampSpectrum)throw new TypeError;for(var n=0,t=0,c=new Float32Array(e.ampSpectrum.length),r=0,l=0,i=0;i<e.ampSpectrum.length;i++){n+=e.ampSpectrum[i];var o=i*e.sampleRate/e.bufferSize;c[i]=o,r+=o*o,t+=o,l+=o*e.ampSpectrum[i]}return(e.ampSpectrum.length*l-t*n)/(n*(r-Math.pow(t,2)))}},"./node_modules/meyda/src/extractors/spectralSpread.js":function(e,n,t){"use strict";t.r(n);var c=t("./node_modules/meyda/src/extractors/extractorUtilities.js");n.default=function(e){if("object"!==typeof e.ampSpectrum)throw new TypeError;return Math.sqrt(Object(c.mu)(2,e.ampSpectrum)-Math.pow(Object(c.mu)(1,e.ampSpectrum),2))}},"./node_modules/meyda/src/extractors/zcr.js":function(e,n,t){"use strict";t.r(n),n.default=function(){if("object"!==typeof arguments[0].signal)throw new TypeError;for(var e=0,n=0;n<arguments[0].signal.length;n++)(arguments[0].signal[n]>=0&&arguments[0].signal[n+1]<0||arguments[0].signal[n]<0&&arguments[0].signal[n+1]>=0)&&e++;return e}},"./node_modules/meyda/src/featureExtractors.js":function(e,n,t){"use strict";t.r(n),t.d(n,"buffer",(function(){return Q})),t.d(n,"complexSpectrum",(function(){return Z})),t.d(n,"amplitudeSpectrum",(function(){return G}));var c=t("./node_modules/meyda/src/extractors/rms.js");t.d(n,"rms",(function(){return c.default}));var r=t("./node_modules/meyda/src/extractors/energy.js");t.d(n,"energy",(function(){return r.default}));var l=t("./node_modules/meyda/src/extractors/spectralSlope.js");t.d(n,"spectralSlope",(function(){return l.default}));var i=t("./node_modules/meyda/src/extractors/spectralCentroid.js");t.d(n,"spectralCentroid",(function(){return i.default}));var o=t("./node_modules/meyda/src/extractors/spectralRolloff.js");t.d(n,"spectralRolloff",(function(){return o.default}));var a=t("./node_modules/meyda/src/extractors/spectralFlatness.js");t.d(n,"spectralFlatness",(function(){return a.default}));var u=t("./node_modules/meyda/src/extractors/spectralSpread.js");t.d(n,"spectralSpread",(function(){return u.default}));var s=t("./node_modules/meyda/src/extractors/spectralSkewness.js");t.d(n,"spectralSkewness",(function(){return s.default}));var d=t("./node_modules/meyda/src/extractors/spectralKurtosis.js");t.d(n,"spectralKurtosis",(function(){return d.default}));var B=t("./node_modules/meyda/src/extractors/zcr.js");t.d(n,"zcr",(function(){return B.default}));var g=t("./node_modules/meyda/src/extractors/loudness.js");t.d(n,"loudness",(function(){return g.default}));var b=t("./node_modules/meyda/src/extractors/perceptualSpread.js");t.d(n,"perceptualSpread",(function(){return b.default}));var m=t("./node_modules/meyda/src/extractors/perceptualSharpness.js");t.d(n,"perceptualSharpness",(function(){return m.default}));var I=t("./node_modules/meyda/src/extractors/mfcc.js");t.d(n,"mfcc",(function(){return I.default}));var p=t("./node_modules/meyda/src/extractors/chroma.js");t.d(n,"chroma",(function(){return p.default}));var y=t("./node_modules/meyda/src/extractors/powerSpectrum.js");t.d(n,"powerSpectrum",(function(){return y.default}));var F=t("./node_modules/meyda/src/extractors/spectralFlux.js");t.d(n,"spectralFlux",(function(){return F.default}));var Q=function(e){return e.signal},Z=function(e){return e.complexSpectrum},G=function(e){return e.ampSpectrum}},"./node_modules/meyda/src/utilities.js":function(e,n,t){"use strict";t.r(n),t.d(n,"isPowerOfTwo",(function(){return i})),t.d(n,"error",(function(){return o})),t.d(n,"pointwiseBufferMult",(function(){return a})),t.d(n,"applyWindow",(function(){return u})),t.d(n,"createBarkScale",(function(){return s})),t.d(n,"typedToArray",(function(){return d})),t.d(n,"arrayToTyped",(function(){return B})),t.d(n,"_normalize",(function(){return g})),t.d(n,"normalize",(function(){return b})),t.d(n,"normalizeToOne",(function(){return m})),t.d(n,"mean",(function(){return I})),t.d(n,"melToFreq",(function(){return F})),t.d(n,"freqToMel",(function(){return Q})),t.d(n,"createMelFilterBank",(function(){return Z})),t.d(n,"hzToOctaves",(function(){return G})),t.d(n,"normalizeByColumn",(function(){return X})),t.d(n,"createChromaFilterBank",(function(){return f})),t.d(n,"frame",(function(){return h}));var c=t("./node_modules/meyda/src/windowing.js"),l={};function i(e){for(;e%2===0&&e>1;)e/=2;return 1===e}function o(e){throw new Error("Meyda: "+e)}function a(e,n){for(var t=[],c=0;c<Math.min(e.length,n.length);c++)t[c]=e[c]*n[c];return t}function u(e,n){if("rect"!==n){if(""!==n&&n||(n="hanning"),l[n]||(l[n]={}),!l[n][e.length])try{l[n][e.length]=c[n](e.length)}catch(t){throw new Error("Invalid windowing function")}e=a(e,l[n][e.length])}return e}function s(e,n,t){for(var c=new Float32Array(e),r=0;r<c.length;r++)c[r]=r*n/t,c[r]=13*Math.atan(c[r]/1315.8)+3.5*Math.atan(Math.pow(c[r]/7518,2));return c}function d(e){return Array.prototype.slice.call(e)}function B(e){return Float32Array.from(e)}function g(e,n){return e/n}function b(e,n){return e.map((function(e){return g(e,n)}))}function m(e){var n=Math.max.apply(null,e);return e.map((function(e){return e/n}))}function I(e){return e.reduce((function(e,n){return e+n}))/e.length}function p(e){return 700*(Math.exp(e/1125)-1)}function y(e){return 1125*Math.log(1+e/700)}function F(e){return p(e)}function Q(e){return y(e)}function Z(e,n,t){for(var c=new Float32Array(e+2),r=new Float32Array(e+2),l=n/2,i=y(0),o=(y(l)-i)/(e+1),a=Array(e+2),u=0;u<c.length;u++)c[u]=u*o,r[u]=p(c[u]),a[u]=Math.floor((t+1)*r[u]/n);for(var s=Array(e),d=0;d<s.length;d++){s[d]=Array.apply(null,new Array(t/2+1)).map(Number.prototype.valueOf,0);for(var B=a[d];B<a[d+1];B++)s[d][B]=(B-a[d])/(a[d+1]-a[d]);for(var g=a[d+1];g<a[d+2];g++)s[d][g]=(a[d+2]-g)/(a[d+2]-a[d+1])}return s}function G(e,n){return Math.log2(16*e/n)}function X(e){var n=e[0].map((function(){return 0})),t=e.reduce((function(e,n){return n.forEach((function(n,t){e[t]+=Math.pow(n,2)})),e}),n).map(Math.sqrt);return e.map((function(e,n){return e.map((function(e,n){return e/(t[n]||1)}))}))}function f(e,n,t){var c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2,i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:440,a=Math.floor(t/2)+1,u=new Array(t).fill(0).map((function(c,r){return e*G(n*r/t,o)}));u[0]=u[1]-1.5*e;var s=u.slice(1).map((function(e,n){return Math.max(e-u[n])}),1).concat([1]),d=Math.round(e/2),B=new Array(e).fill(0).map((function(n,t){return u.map((function(n){return(10*e+d+n-t)%e-d}))})),g=B.map((function(e,n){return e.map((function(e,t){return Math.exp(-.5*Math.pow(2*B[n][t]/s[t],2))}))}));if(g=X(g),l){var b=u.map((function(n){return Math.exp(-.5*Math.pow((n/e-c)/l,2))}));g=g.map((function(e){return e.map((function(e,n){return e*b[n]}))}))}return i&&(g=[].concat(r(g.slice(3)),r(g.slice(0,3)))),g.map((function(e){return e.slice(0,a)}))}function h(e,n,t){if(e.length<n)throw new Error("Buffer is too short for frame length");if(t<1)throw new Error("Hop length cannot be less that 1");if(n<1)throw new Error("Frame length cannot be less that 1");var c=1+Math.floor((e.length-n)/t);return new Array(c).fill(0).map((function(c,r){return e.slice(r*t,r*t+n)}))}},"./node_modules/meyda/src/windowing.js":function(e,n,t){"use strict";function c(e){for(var n=new Float32Array(e),t=2*Math.PI/(e-1),c=2*t,r=0;r<e/2;r++)n[r]=.42-.5*Math.cos(r*t)+.08*Math.cos(r*c);for(var l=e/2;l>0;l--)n[e-l]=n[l-1];return n}function r(e){for(var n=Math.PI/(e-1),t=new Float32Array(e),c=0;c<e;c++)t[c]=Math.sin(n*c);return t}function l(e){for(var n=new Float32Array(e),t=0;t<e;t++)n[t]=.5-.5*Math.cos(2*Math.PI*t/(e-1));return n}function i(e){for(var n=new Float32Array(e),t=0;t<e;t++)n[t]=.54-.46*Math.cos(2*Math.PI*(t/e-1));return n}t.r(n),t.d(n,"blackman",(function(){return c})),t.d(n,"sine",(function(){return r})),t.d(n,"hanning",(function(){return l})),t.d(n,"hamming",(function(){return i}))},"./node_modules/object-assign/index.js":function(e,n,t){"use strict";var c=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;function i(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var c={};return"abcdefghijklmnopqrst".split("").forEach((function(e){c[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},c)).join("")}catch(r){return!1}}()?Object.assign:function(e,n){for(var t,o,a=i(e),u=1;u<arguments.length;u++){for(var s in t=Object(arguments[u]))r.call(t,s)&&(a[s]=t[s]);if(c){o=c(t);for(var d=0;d<o.length;d++)l.call(t,o[d])&&(a[o[d]]=t[o[d]])}}return a}},"./node_modules/process/browser.js":function(e,n){var t,c,r=e.exports={};function l(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(e){if(t===setTimeout)return setTimeout(e,0);if((t===l||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"===typeof setTimeout?setTimeout:l}catch(e){t=l}try{c="function"===typeof clearTimeout?clearTimeout:i}catch(e){c=i}}();var a,u=[],s=!1,d=-1;function B(){s&&a&&(s=!1,a.length?u=a.concat(u):d=-1,u.length&&g())}function g(){if(!s){var e=o(B);s=!0;for(var n=u.length;n;){for(a=u,u=[];++d<n;)a&&a[d].run();d=-1,n=u.length}a=null,s=!1,function(e){if(c===clearTimeout)return clearTimeout(e);if((c===i||!c)&&clearTimeout)return c=clearTimeout,clearTimeout(e);try{c(e)}catch(n){try{return c.call(null,e)}catch(n){return c.call(this,e)}}}(e)}}function b(e,n){this.fun=e,this.array=n}function m(){}r.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];u.push(new b(e,n)),1!==u.length||s||o(g)},b.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=m,r.addListener=m,r.once=m,r.off=m,r.removeListener=m,r.removeAllListeners=m,r.emit=m,r.prependListener=m,r.prependOnceListener=m,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},"./node_modules/util/node_modules/inherits/inherits.js":function(e,n,t){try{var c=t("./node_modules/util/util.js");if("function"!==typeof c.inherits)throw"";e.exports=c.inherits}catch(r){e.exports=t("./node_modules/util/node_modules/inherits/inherits_browser.js")}},"./node_modules/util/node_modules/inherits/inherits_browser.js":function(e,n){"function"===typeof Object.create?e.exports=function(e,n){e.super_=n,e.prototype=Object.create(n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,n){e.super_=n;var t=function(){};t.prototype=n.prototype,e.prototype=new t,e.prototype.constructor=e}},"./node_modules/util/support/isBufferBrowser.js":function(e,n){e.exports=function(e){return e&&"object"===typeof e&&"function"===typeof e.copy&&"function"===typeof e.fill&&"function"===typeof e.readUInt8}},"./node_modules/util/util.js":function(e,n,t){(function(e){var c=Object.getOwnPropertyDescriptors||function(e){for(var n=Object.keys(e),t={},c=0;c<n.length;c++)t[n[c]]=Object.getOwnPropertyDescriptor(e,n[c]);return t},r=/%[sdj%]/g;n.format=function(e){if(!p(e)){for(var n=[],t=0;t<arguments.length;t++)n.push(o(arguments[t]));return n.join(" ")}t=1;for(var c=arguments,l=c.length,i=String(e).replace(r,(function(e){if("%%"===e)return"%";if(t>=l)return e;switch(e){case"%s":return String(c[t++]);case"%d":return Number(c[t++]);case"%j":try{return JSON.stringify(c[t++])}catch(n){return"[Circular]"}default:return e}})),a=c[t];t<l;a=c[++t])m(a)||!Q(a)?i+=" "+a:i+=" "+o(a);return i},n.deprecate=function(t,c){if("undefined"!==typeof e&&!0===e.noDeprecation)return t;if("undefined"===typeof e)return function(){return n.deprecate(t,c).apply(this,arguments)};var r=!1;return function(){if(!r){if(e.throwDeprecation)throw new Error(c);e.traceDeprecation?console.trace(c):console.error(c),r=!0}return t.apply(this,arguments)}};var l,i={};function o(e,t){var c={seen:[],stylize:u};return arguments.length>=3&&(c.depth=arguments[2]),arguments.length>=4&&(c.colors=arguments[3]),b(t)?c.showHidden=t:t&&n._extend(c,t),y(c.showHidden)&&(c.showHidden=!1),y(c.depth)&&(c.depth=2),y(c.colors)&&(c.colors=!1),y(c.customInspect)&&(c.customInspect=!0),c.colors&&(c.stylize=a),s(c,e,c.depth)}function a(e,n){var t=o.styles[n];return t?"\x1b["+o.colors[t][0]+"m"+e+"\x1b["+o.colors[t][1]+"m":e}function u(e,n){return e}function s(e,t,c){if(e.customInspect&&t&&X(t.inspect)&&t.inspect!==n.inspect&&(!t.constructor||t.constructor.prototype!==t)){var r=t.inspect(c,e);return p(r)||(r=s(e,r,c)),r}var l=function(e,n){if(y(n))return e.stylize("undefined","undefined");if(p(n)){var t="'"+JSON.stringify(n).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(t,"string")}return I(n)?e.stylize(""+n,"number"):b(n)?e.stylize(""+n,"boolean"):m(n)?e.stylize("null","null"):void 0}(e,t);if(l)return l;var i=Object.keys(t),o=function(e){var n={};return e.forEach((function(e,t){n[e]=!0})),n}(i);if(e.showHidden&&(i=Object.getOwnPropertyNames(t)),G(t)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return d(t);if(0===i.length){if(X(t)){var a=t.name?": "+t.name:"";return e.stylize("[Function"+a+"]","special")}if(F(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(Z(t))return e.stylize(Date.prototype.toString.call(t),"date");if(G(t))return d(t)}var u,Q="",f=!1,h=["{","}"];return g(t)&&(f=!0,h=["[","]"]),X(t)&&(Q=" [Function"+(t.name?": "+t.name:"")+"]"),F(t)&&(Q=" "+RegExp.prototype.toString.call(t)),Z(t)&&(Q=" "+Date.prototype.toUTCString.call(t)),G(t)&&(Q=" "+d(t)),0!==i.length||f&&0!=t.length?c<0?F(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),u=f?function(e,n,t,c,r){for(var l=[],i=0,o=n.length;i<o;++i)C(n,String(i))?l.push(B(e,n,t,c,String(i),!0)):l.push("");return r.forEach((function(r){r.match(/^\d+$/)||l.push(B(e,n,t,c,r,!0))})),l}(e,t,c,o,i):i.map((function(n){return B(e,t,c,o,n,f)})),e.seen.pop(),function(e,n,t){return e.reduce((function(e,n){return n.indexOf("\n"),e+n.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?t[0]+(""===n?"":n+"\n ")+" "+e.join(",\n  ")+" "+t[1]:t[0]+n+" "+e.join(", ")+" "+t[1]}(u,Q,h)):h[0]+Q+h[1]}function d(e){return"["+Error.prototype.toString.call(e)+"]"}function B(e,n,t,c,r,l){var i,o,a;if((a=Object.getOwnPropertyDescriptor(n,r)||{value:n[r]}).get?o=a.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):a.set&&(o=e.stylize("[Setter]","special")),C(c,r)||(i="["+r+"]"),o||(e.seen.indexOf(a.value)<0?(o=m(t)?s(e,a.value,null):s(e,a.value,t-1)).indexOf("\n")>-1&&(o=l?o.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+o.split("\n").map((function(e){return"   "+e})).join("\n")):o=e.stylize("[Circular]","special")),y(i)){if(l&&r.match(/^\d+$/))return o;(i=JSON.stringify(""+r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(i=i.substr(1,i.length-2),i=e.stylize(i,"name")):(i=i.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),i=e.stylize(i,"string"))}return i+": "+o}function g(e){return Array.isArray(e)}function b(e){return"boolean"===typeof e}function m(e){return null===e}function I(e){return"number"===typeof e}function p(e){return"string"===typeof e}function y(e){return void 0===e}function F(e){return Q(e)&&"[object RegExp]"===f(e)}function Q(e){return"object"===typeof e&&null!==e}function Z(e){return Q(e)&&"[object Date]"===f(e)}function G(e){return Q(e)&&("[object Error]"===f(e)||e instanceof Error)}function X(e){return"function"===typeof e}function f(e){return Object.prototype.toString.call(e)}function h(e){return e<10?"0"+e.toString(10):e.toString(10)}n.debuglog=function(t){if(y(l)&&(l=e.env.NODE_DEBUG||""),t=t.toUpperCase(),!i[t])if(new RegExp("\\b"+t+"\\b","i").test(l)){var c=e.pid;i[t]=function(){var e=n.format.apply(n,arguments);console.error("%s %d: %s",t,c,e)}}else i[t]=function(){};return i[t]},n.inspect=o,o.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},o.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},n.isArray=g,n.isBoolean=b,n.isNull=m,n.isNullOrUndefined=function(e){return null==e},n.isNumber=I,n.isString=p,n.isSymbol=function(e){return"symbol"===typeof e},n.isUndefined=y,n.isRegExp=F,n.isObject=Q,n.isDate=Z,n.isError=G,n.isFunction=X,n.isPrimitive=function(e){return null===e||"boolean"===typeof e||"number"===typeof e||"string"===typeof e||"symbol"===typeof e||"undefined"===typeof e},n.isBuffer=t("./node_modules/util/support/isBufferBrowser.js");var V=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function W(){var e=new Date,n=[h(e.getHours()),h(e.getMinutes()),h(e.getSeconds())].join(":");return[e.getDate(),V[e.getMonth()],n].join(" ")}function C(e,n){return Object.prototype.hasOwnProperty.call(e,n)}n.log=function(){console.log("%s - %s",W(),n.format.apply(n,arguments))},n.inherits=t("./node_modules/util/node_modules/inherits/inherits.js"),n._extend=function(e,n){if(!n||!Q(n))return e;for(var t=Object.keys(n),c=t.length;c--;)e[t[c]]=n[t[c]];return e};var U="undefined"!==typeof Symbol?Symbol("util.promisify.custom"):void 0;function x(e,n){if(!e){var t=new Error("Promise was rejected with a falsy value");t.reason=e,e=t}return n(e)}n.promisify=function(e){if("function"!==typeof e)throw new TypeError('The "original" argument must be of type Function');if(U&&e[U]){var n;if("function"!==typeof(n=e[U]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(n,U,{value:n,enumerable:!1,writable:!1,configurable:!0}),n}function n(){for(var n,t,c=new Promise((function(e,c){n=e,t=c})),r=[],l=0;l<arguments.length;l++)r.push(arguments[l]);r.push((function(e,c){e?t(e):n(c)}));try{e.apply(this,r)}catch(i){t(i)}return c}return Object.setPrototypeOf(n,Object.getPrototypeOf(e)),U&&Object.defineProperty(n,U,{value:n,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(n,c(e))},n.promisify.custom=U,n.callbackify=function(n){if("function"!==typeof n)throw new TypeError('The "original" argument must be of type Function');function t(){for(var t=[],c=0;c<arguments.length;c++)t.push(arguments[c]);var r=t.pop();if("function"!==typeof r)throw new TypeError("The last argument must be of type Function");var l=this,i=function(){return r.apply(l,arguments)};n.apply(this,t).then((function(n){e.nextTick(i,null,n)}),(function(n){e.nextTick(x,n,i)}))}return Object.setPrototypeOf(t,Object.getPrototypeOf(n)),Object.defineProperties(t,c(n)),t}}).call(this,t("./node_modules/process/browser.js"))},"./node_modules/webpack/buildin/global.js":function(e,n){var t;t=function(){return this}();try{t=t||new Function("return this")()}catch(c){"object"===typeof window&&(t=window)}e.exports=t},"./node_modules/worker-loader/dist/cjs.js?fallback=true&inline!./src/worker/feature-extractor.worker.ts":function(e,n,t){e.exports=function(){return t("./node_modules/worker-loader/dist/workers/InlineWorker.js")("/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/ts-loader/index.js!./src/worker/feature-extractor.worker.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/assert/assert.js\":\n/*!***************************************!*\\\n  !*** ./node_modules/assert/assert.js ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nvar objectAssign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/dct/index.js\":\n/*!***********************************!*\\\n  !*** ./node_modules/dct/index.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! ./src/dct.js */ \"./node_modules/dct/src/dct.js\");\n\n\n/***/ }),\n\n/***/ \"./node_modules/dct/src/dct.js\":\n/*!*************************************!*\\\n  !*** ./node_modules/dct/src/dct.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/*===========================================================================*\\\n * Discrete Cosine Transform\n *\n * (c) Vail Systems. Joshua Jung and Ben Bryan. 2015\n *\n * This code is not designed to be highly optimized but as an educational\n * tool to understand the Mel-scale and its related coefficients used in\n * human speech analysis.\n\\*===========================================================================*/\ncosMap = null;\n\n// Builds a cosine map for the given input size. This allows multiple input sizes to be memoized automagically\n// if you want to run the DCT over and over.\nvar memoizeCosines = function(N) {\n  cosMap = cosMap || {};\n  cosMap[N] = new Array(N*N);\n\n  var PI_N = Math.PI / N;\n\n  for (var k = 0; k < N; k++) {\n    for (var n = 0; n < N; n++) {\n      cosMap[N][n + (k * N)] = Math.cos(PI_N * (n + 0.5) * k);\n    }\n  }\n};\n\nfunction dct(signal, scale) {\n  var L = signal.length;\n  scale = scale || 2;\n\n  if (!cosMap || !cosMap[L]) memoizeCosines(L);\n\n  var coefficients = signal.map(function () {return 0;});\n\n  return coefficients.map(function (__, ix) {\n    return scale * signal.reduce(function (prev, cur, ix_, arr) {\n      return prev + (cur * cosMap[L][ix_ + (ix * L)]);\n    }, 0);\n  });\n};\n\nmodule.exports = dct;\n\n\n/***/ }),\n\n/***/ \"./node_modules/fftjs/dist/fft.js\":\n/*!****************************************!*\\\n  !*** ./node_modules/fftjs/dist/fft.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/fftjs/dist/utils.js\");\n\n// real to complex fft\nvar fft = function fft(signal) {\n\n  var complexSignal = {};\n\n  if (signal.real === undefined || signal.imag === undefined) {\n    complexSignal = utils.constructComplexArray(signal);\n  } else {\n    complexSignal.real = signal.real.slice();\n    complexSignal.imag = signal.imag.slice();\n  }\n\n  var N = complexSignal.real.length;\n  var logN = Math.log2(N);\n\n  if (Math.round(logN) != logN) throw new Error('Input size must be a power of 2.');\n\n  if (complexSignal.real.length != complexSignal.imag.length) {\n    throw new Error('Real and imaginary components must have the same length.');\n  }\n\n  var bitReversedIndices = utils.bitReverseArray(N);\n\n  // sort array\n  var ordered = {\n    'real': [],\n    'imag': []\n  };\n\n  for (var i = 0; i < N; i++) {\n    ordered.real[bitReversedIndices[i]] = complexSignal.real[i];\n    ordered.imag[bitReversedIndices[i]] = complexSignal.imag[i];\n  }\n\n  for (var _i = 0; _i < N; _i++) {\n    complexSignal.real[_i] = ordered.real[_i];\n    complexSignal.imag[_i] = ordered.imag[_i];\n  }\n  // iterate over the number of stages\n  for (var n = 1; n <= logN; n++) {\n    var currN = Math.pow(2, n);\n\n    // find twiddle factors\n    for (var k = 0; k < currN / 2; k++) {\n      var twiddle = utils.euler(k, currN);\n\n      // on each block of FT, implement the butterfly diagram\n      for (var m = 0; m < N / currN; m++) {\n        var currEvenIndex = currN * m + k;\n        var currOddIndex = currN * m + k + currN / 2;\n\n        var currEvenIndexSample = {\n          'real': complexSignal.real[currEvenIndex],\n          'imag': complexSignal.imag[currEvenIndex]\n        };\n        var currOddIndexSample = {\n          'real': complexSignal.real[currOddIndex],\n          'imag': complexSignal.imag[currOddIndex]\n        };\n\n        var odd = utils.multiply(twiddle, currOddIndexSample);\n\n        var subtractionResult = utils.subtract(currEvenIndexSample, odd);\n        complexSignal.real[currOddIndex] = subtractionResult.real;\n        complexSignal.imag[currOddIndex] = subtractionResult.imag;\n\n        var additionResult = utils.add(odd, currEvenIndexSample);\n        complexSignal.real[currEvenIndex] = additionResult.real;\n        complexSignal.imag[currEvenIndex] = additionResult.imag;\n      }\n    }\n  }\n\n  return complexSignal;\n};\n\n// complex to real ifft\nvar ifft = function ifft(signal) {\n\n  if (signal.real === undefined || signal.imag === undefined) {\n    throw new Error(\"IFFT only accepts a complex input.\");\n  }\n\n  var N = signal.real.length;\n\n  var complexSignal = {\n    'real': [],\n    'imag': []\n  };\n\n  //take complex conjugate in order to be able to use the regular FFT for IFFT\n  for (var i = 0; i < N; i++) {\n    var currentSample = {\n      'real': signal.real[i],\n      'imag': signal.imag[i]\n    };\n\n    var conjugateSample = utils.conj(currentSample);\n    complexSignal.real[i] = conjugateSample.real;\n    complexSignal.imag[i] = conjugateSample.imag;\n  }\n\n  //compute\n  var X = fft(complexSignal);\n\n  //normalize\n  complexSignal.real = X.real.map(function (val) {\n    return val / N;\n  });\n\n  complexSignal.imag = X.imag.map(function (val) {\n    return val / N;\n  });\n\n  return complexSignal;\n};\n\nmodule.exports = {\n  fft: fft,\n  ifft: ifft\n};\n\n/***/ }),\n\n/***/ \"./node_modules/fftjs/dist/utils.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/fftjs/dist/utils.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// memoization of the reversal of different lengths.\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar memoizedReversal = {};\nvar memoizedZeroBuffers = {};\n\nvar constructComplexArray = function constructComplexArray(signal) {\n  var complexSignal = {};\n\n  complexSignal.real = signal.real === undefined ? signal.slice() : signal.real.slice();\n\n  var bufferSize = complexSignal.real.length;\n\n  if (memoizedZeroBuffers[bufferSize] === undefined) {\n    memoizedZeroBuffers[bufferSize] = Array.apply(null, Array(bufferSize)).map(Number.prototype.valueOf, 0);\n  }\n\n  complexSignal.imag = memoizedZeroBuffers[bufferSize].slice();\n\n  return complexSignal;\n};\n\nvar bitReverseArray = function bitReverseArray(N) {\n  if (memoizedReversal[N] === undefined) {\n    var maxBinaryLength = (N - 1).toString(2).length; //get the binary length of the largest index.\n    var templateBinary = '0'.repeat(maxBinaryLength); //create a template binary of that length.\n    var reversed = {};\n    for (var n = 0; n < N; n++) {\n      var currBinary = n.toString(2); //get binary value of current index.\n\n      //prepend zeros from template to current binary. This makes binary values of all indices have the same length.\n      currBinary = templateBinary.substr(currBinary.length) + currBinary;\n\n      currBinary = [].concat(_toConsumableArray(currBinary)).reverse().join(''); //reverse\n      reversed[n] = parseInt(currBinary, 2); //convert to decimal\n    }\n    memoizedReversal[N] = reversed; //save\n  }\n  return memoizedReversal[N];\n};\n\n// complex multiplication\nvar multiply = function multiply(a, b) {\n  return {\n    'real': a.real * b.real - a.imag * b.imag,\n    'imag': a.real * b.imag + a.imag * b.real\n  };\n};\n\n// complex addition\nvar add = function add(a, b) {\n  return {\n    'real': a.real + b.real,\n    'imag': a.imag + b.imag\n  };\n};\n\n// complex subtraction\nvar subtract = function subtract(a, b) {\n  return {\n    'real': a.real - b.real,\n    'imag': a.imag - b.imag\n  };\n};\n\n// euler's identity e^x = cos(x) + sin(x)\nvar euler = function euler(kn, N) {\n  var x = -2 * Math.PI * kn / N;\n  return { 'real': Math.cos(x), 'imag': Math.sin(x) };\n};\n\n// complex conjugate\nvar conj = function conj(a) {\n  a.imag *= -1;\n  return a;\n};\n\nmodule.exports = {\n  bitReverseArray: bitReverseArray,\n  multiply: multiply,\n  add: add,\n  subtract: subtract,\n  euler: euler,\n  conj: conj,\n  constructComplexArray: constructComplexArray\n};\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/chroma.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/chroma.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default(args) {\n  if (_typeof(args.ampSpectrum) !== 'object') {\n    throw new TypeError('Valid ampSpectrum is required to generate chroma');\n  }\n\n  if (_typeof(args.chromaFilterBank) !== 'object') {\n    throw new TypeError('Valid chromaFilterBank is required to generate chroma');\n  }\n\n  var chromagram = args.chromaFilterBank.map(function (row, i) {\n    return args.ampSpectrum.reduce(function (acc, v, j) {\n      return acc + v * row[j];\n    }, 0);\n  });\n  var maxVal = Math.max.apply(Math, _toConsumableArray(chromagram));\n  return maxVal ? chromagram.map(function (v) {\n    return v / maxVal;\n  }) : chromagram;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/energy.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/energy.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar assert = _interopRequireWildcard(__webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default() {\n  if (_typeof(arguments[0].signal) !== 'object') {\n    throw new TypeError();\n  }\n\n  var energy = 0;\n\n  for (var i = 0; i < arguments[0].signal.length; i++) {\n    energy += Math.pow(Math.abs(arguments[0].signal[i]), 2);\n  }\n\n  return energy;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/extractorUtilities.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/extractorUtilities.js ***!\n  \\***********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mu = mu;\n\nfunction mu(i, amplitudeSpect) {\n  var numerator = 0;\n  var denominator = 0;\n\n  for (var k = 0; k < amplitudeSpect.length; k++) {\n    numerator += Math.pow(k, i) * Math.abs(amplitudeSpect[k]);\n    denominator += amplitudeSpect[k];\n  }\n\n  return numerator / denominator;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/loudness.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/loudness.js ***!\n  \\*************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default(args) {\n  if (_typeof(args.ampSpectrum) !== 'object' || _typeof(args.barkScale) !== 'object') {\n    throw new TypeError();\n  }\n\n  var NUM_BARK_BANDS = 24;\n  var specific = new Float32Array(NUM_BARK_BANDS);\n  var total = 0;\n  var normalisedSpectrum = args.ampSpectrum;\n  var bbLimits = new Int32Array(NUM_BARK_BANDS + 1);\n  bbLimits[0] = 0;\n  var currentBandEnd = args.barkScale[normalisedSpectrum.length - 1] / NUM_BARK_BANDS;\n  var currentBand = 1;\n\n  for (var i = 0; i < normalisedSpectrum.length; i++) {\n    while (args.barkScale[i] > currentBandEnd) {\n      bbLimits[currentBand++] = i;\n      currentBandEnd = currentBand * args.barkScale[normalisedSpectrum.length - 1] / NUM_BARK_BANDS;\n    }\n  }\n\n  bbLimits[NUM_BARK_BANDS] = normalisedSpectrum.length - 1; //process\n\n  for (var _i = 0; _i < NUM_BARK_BANDS; _i++) {\n    var sum = 0;\n\n    for (var j = bbLimits[_i]; j < bbLimits[_i + 1]; j++) {\n      sum += normalisedSpectrum[j];\n    }\n\n    specific[_i] = Math.pow(sum, 0.23);\n  } //get total loudness\n\n\n  for (var _i2 = 0; _i2 < specific.length; _i2++) {\n    total += specific[_i2];\n  }\n\n  return {\n    specific: specific,\n    total: total\n  };\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/mfcc.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/mfcc.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _powerSpectrum = _interopRequireDefault(__webpack_require__(/*! ./powerSpectrum */ \"./node_modules/meyda/dist/node/extractors/powerSpectrum.js\"));\n\nvar _utilities = _interopRequireDefault(__webpack_require__(/*! ./../utilities */ \"./node_modules/meyda/dist/node/utilities.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar dct = __webpack_require__(/*! dct */ \"./node_modules/dct/index.js\");\n\nfunction _default(args) {\n  if (_typeof(args.ampSpectrum) !== 'object') {\n    throw new TypeError('Valid ampSpectrum is required to generate MFCC');\n  }\n\n  if (_typeof(args.melFilterBank) !== 'object') {\n    throw new TypeError('Valid melFilterBank is required to generate MFCC');\n  }\n\n  var numberOfMFCCCoefficients = Math.min(40, Math.max(1, args.numberOfMFCCCoefficients || 13)); // Tutorial from:\n  // http://practicalcryptography.com/miscellaneous/machine-learning\n  // /guide-mel-frequency-cepstral-coefficients-mfccs/\n\n  var powSpec = (0, _powerSpectrum.default)(args);\n  var numFilters = args.melFilterBank.length;\n  var filtered = Array(numFilters);\n\n  if (numFilters < numberOfMFCCCoefficients) {\n    throw new Error(\"Insufficient filter bank for requested number of coefficients\");\n  }\n\n  var loggedMelBands = new Float32Array(numFilters);\n\n  for (var i = 0; i < loggedMelBands.length; i++) {\n    filtered[i] = new Float32Array(args.bufferSize / 2);\n    loggedMelBands[i] = 0;\n\n    for (var j = 0; j < args.bufferSize / 2; j++) {\n      //point-wise multiplication between power spectrum and filterbanks.\n      filtered[i][j] = args.melFilterBank[i][j] * powSpec[j]; //summing up all of the coefficients into one array\n\n      loggedMelBands[i] += filtered[i][j];\n    } //log each coefficient.\n\n\n    loggedMelBands[i] = Math.log(loggedMelBands[i] + 1);\n  } //dct\n\n\n  var loggedMelBandsArray = Array.prototype.slice.call(loggedMelBands);\n  var mfccs = dct(loggedMelBandsArray).slice(0, numberOfMFCCCoefficients);\n  return mfccs;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/perceptualSharpness.js\":\n/*!************************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/perceptualSharpness.js ***!\n  \\************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _loudness = _interopRequireDefault(__webpack_require__(/*! ./loudness */ \"./node_modules/meyda/dist/node/extractors/loudness.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default() {\n  if (_typeof(arguments[0].signal) !== 'object') {\n    throw new TypeError();\n  }\n\n  var loudnessValue = (0, _loudness.default)(arguments[0]);\n  var spec = loudnessValue.specific;\n  var output = 0;\n\n  for (var i = 0; i < spec.length; i++) {\n    if (i < 15) {\n      output += (i + 1) * spec[i + 1];\n    } else {\n      output += 0.066 * Math.exp(0.171 * (i + 1));\n    }\n  }\n\n  output *= 0.11 / loudnessValue.total;\n  return output;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/perceptualSpread.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/perceptualSpread.js ***!\n  \\*********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _loudness = _interopRequireDefault(__webpack_require__(/*! ./loudness */ \"./node_modules/meyda/dist/node/extractors/loudness.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default() {\n  if (_typeof(arguments[0].signal) !== 'object') {\n    throw new TypeError();\n  }\n\n  var loudnessValue = (0, _loudness.default)(arguments[0]);\n  var max = 0;\n\n  for (var i = 0; i < loudnessValue.specific.length; i++) {\n    if (loudnessValue.specific[i] > max) {\n      max = loudnessValue.specific[i];\n    }\n  }\n\n  var spread = Math.pow((loudnessValue.total - max) / loudnessValue.total, 2);\n  return spread;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/powerSpectrum.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/powerSpectrum.js ***!\n  \\******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default() {\n  if (_typeof(arguments[0].ampSpectrum) !== 'object') {\n    throw new TypeError();\n  }\n\n  var powerSpectrum = new Float32Array(arguments[0].ampSpectrum.length);\n\n  for (var i = 0; i < powerSpectrum.length; i++) {\n    powerSpectrum[i] = Math.pow(arguments[0].ampSpectrum[i], 2);\n  }\n\n  return powerSpectrum;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/rms.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/rms.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default(args) {\n  if (_typeof(args.signal) !== 'object') {\n    throw new TypeError();\n  }\n\n  var rms = 0;\n\n  for (var i = 0; i < args.signal.length; i++) {\n    rms += Math.pow(args.signal[i], 2);\n  }\n\n  rms = rms / args.signal.length;\n  rms = Math.sqrt(rms);\n  return rms;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/spectralCentroid.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/spectralCentroid.js ***!\n  \\*********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _extractorUtilities = __webpack_require__(/*! ./extractorUtilities */ \"./node_modules/meyda/dist/node/extractors/extractorUtilities.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default() {\n  if (_typeof(arguments[0].ampSpectrum) !== 'object') {\n    throw new TypeError();\n  }\n\n  return (0, _extractorUtilities.mu)(1, arguments[0].ampSpectrum);\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/spectralFlatness.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/spectralFlatness.js ***!\n  \\*********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default() {\n  if (_typeof(arguments[0].ampSpectrum) !== 'object') {\n    throw new TypeError();\n  }\n\n  var numerator = 0;\n  var denominator = 0;\n\n  for (var i = 0; i < arguments[0].ampSpectrum.length; i++) {\n    numerator += Math.log(arguments[0].ampSpectrum[i]);\n    denominator += arguments[0].ampSpectrum[i];\n  }\n\n  return Math.exp(numerator / arguments[0].ampSpectrum.length) * arguments[0].ampSpectrum.length / denominator;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/spectralFlux.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/spectralFlux.js ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default(args) {\n  if (_typeof(args.signal) !== 'object' || _typeof(args.previousSignal) != 'object') {\n    throw new TypeError();\n  }\n\n  var sf = 0;\n\n  for (var i = -(args.bufferSize / 2); i < signal.length / 2 - 1; i++) {\n    x = Math.abs(args.signal[i]) - Math.abs(args.previousSignal[i]);\n    sf += (x + Math.abs(x)) / 2;\n  }\n\n  return sf;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/spectralKurtosis.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/spectralKurtosis.js ***!\n  \\*********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _extractorUtilities = __webpack_require__(/*! ./extractorUtilities */ \"./node_modules/meyda/dist/node/extractors/extractorUtilities.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default() {\n  if (_typeof(arguments[0].ampSpectrum) !== 'object') {\n    throw new TypeError();\n  }\n\n  var ampspec = arguments[0].ampSpectrum;\n  var mu1 = (0, _extractorUtilities.mu)(1, ampspec);\n  var mu2 = (0, _extractorUtilities.mu)(2, ampspec);\n  var mu3 = (0, _extractorUtilities.mu)(3, ampspec);\n  var mu4 = (0, _extractorUtilities.mu)(4, ampspec);\n  var numerator = -3 * Math.pow(mu1, 4) + 6 * mu1 * mu2 - 4 * mu1 * mu3 + mu4;\n  var denominator = Math.pow(Math.sqrt(mu2 - Math.pow(mu1, 2)), 4);\n  return numerator / denominator;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/spectralRolloff.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/spectralRolloff.js ***!\n  \\********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default() {\n  if (_typeof(arguments[0].ampSpectrum) !== 'object') {\n    throw new TypeError();\n  }\n\n  var ampspec = arguments[0].ampSpectrum; //calculate nyquist bin\n\n  var nyqBin = arguments[0].sampleRate / (2 * (ampspec.length - 1));\n  var ec = 0;\n\n  for (var i = 0; i < ampspec.length; i++) {\n    ec += ampspec[i];\n  }\n\n  var threshold = 0.99 * ec;\n  var n = ampspec.length - 1;\n\n  while (ec > threshold && n >= 0) {\n    ec -= ampspec[n];\n    --n;\n  }\n\n  return (n + 1) * nyqBin;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/spectralSkewness.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/spectralSkewness.js ***!\n  \\*********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _extractorUtilities = __webpack_require__(/*! ./extractorUtilities */ \"./node_modules/meyda/dist/node/extractors/extractorUtilities.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default(args) {\n  if (_typeof(args.ampSpectrum) !== 'object') {\n    throw new TypeError();\n  }\n\n  var mu1 = (0, _extractorUtilities.mu)(1, args.ampSpectrum);\n  var mu2 = (0, _extractorUtilities.mu)(2, args.ampSpectrum);\n  var mu3 = (0, _extractorUtilities.mu)(3, args.ampSpectrum);\n  var numerator = 2 * Math.pow(mu1, 3) - 3 * mu1 * mu2 + mu3;\n  var denominator = Math.pow(Math.sqrt(mu2 - Math.pow(mu1, 2)), 3);\n  return numerator / denominator;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/spectralSlope.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/spectralSlope.js ***!\n  \\******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default(args) {\n  if (_typeof(args.ampSpectrum) !== 'object') {\n    throw new TypeError();\n  } //linear regression\n\n\n  var ampSum = 0;\n  var freqSum = 0;\n  var freqs = new Float32Array(args.ampSpectrum.length);\n  var powFreqSum = 0;\n  var ampFreqSum = 0;\n\n  for (var i = 0; i < args.ampSpectrum.length; i++) {\n    ampSum += args.ampSpectrum[i];\n    var curFreq = i * args.sampleRate / args.bufferSize;\n    freqs[i] = curFreq;\n    powFreqSum += curFreq * curFreq;\n    freqSum += curFreq;\n    ampFreqSum += curFreq * args.ampSpectrum[i];\n  }\n\n  return (args.ampSpectrum.length * ampFreqSum - freqSum * ampSum) / (ampSum * (powFreqSum - Math.pow(freqSum, 2)));\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/spectralSpread.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/spectralSpread.js ***!\n  \\*******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _extractorUtilities = __webpack_require__(/*! ./extractorUtilities */ \"./node_modules/meyda/dist/node/extractors/extractorUtilities.js\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default(args) {\n  if (_typeof(args.ampSpectrum) !== 'object') {\n    throw new TypeError();\n  }\n\n  return Math.sqrt((0, _extractorUtilities.mu)(2, args.ampSpectrum) - Math.pow((0, _extractorUtilities.mu)(1, args.ampSpectrum), 2));\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/extractors/zcr.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/extractors/zcr.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _default() {\n  if (_typeof(arguments[0].signal) !== 'object') {\n    throw new TypeError();\n  }\n\n  var zcr = 0;\n\n  for (var i = 0; i < arguments[0].signal.length; i++) {\n    if (arguments[0].signal[i] >= 0 && arguments[0].signal[i + 1] < 0 || arguments[0].signal[i] < 0 && arguments[0].signal[i + 1] >= 0) {\n      zcr++;\n    }\n  }\n\n  return zcr;\n}\n\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/featureExtractors.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/featureExtractors.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"rms\", {\n  enumerable: true,\n  get: function get() {\n    return _rms.default;\n  }\n});\nObject.defineProperty(exports, \"energy\", {\n  enumerable: true,\n  get: function get() {\n    return _energy.default;\n  }\n});\nObject.defineProperty(exports, \"spectralSlope\", {\n  enumerable: true,\n  get: function get() {\n    return _spectralSlope.default;\n  }\n});\nObject.defineProperty(exports, \"spectralCentroid\", {\n  enumerable: true,\n  get: function get() {\n    return _spectralCentroid.default;\n  }\n});\nObject.defineProperty(exports, \"spectralRolloff\", {\n  enumerable: true,\n  get: function get() {\n    return _spectralRolloff.default;\n  }\n});\nObject.defineProperty(exports, \"spectralFlatness\", {\n  enumerable: true,\n  get: function get() {\n    return _spectralFlatness.default;\n  }\n});\nObject.defineProperty(exports, \"spectralSpread\", {\n  enumerable: true,\n  get: function get() {\n    return _spectralSpread.default;\n  }\n});\nObject.defineProperty(exports, \"spectralSkewness\", {\n  enumerable: true,\n  get: function get() {\n    return _spectralSkewness.default;\n  }\n});\nObject.defineProperty(exports, \"spectralKurtosis\", {\n  enumerable: true,\n  get: function get() {\n    return _spectralKurtosis.default;\n  }\n});\nObject.defineProperty(exports, \"zcr\", {\n  enumerable: true,\n  get: function get() {\n    return _zcr.default;\n  }\n});\nObject.defineProperty(exports, \"loudness\", {\n  enumerable: true,\n  get: function get() {\n    return _loudness.default;\n  }\n});\nObject.defineProperty(exports, \"perceptualSpread\", {\n  enumerable: true,\n  get: function get() {\n    return _perceptualSpread.default;\n  }\n});\nObject.defineProperty(exports, \"perceptualSharpness\", {\n  enumerable: true,\n  get: function get() {\n    return _perceptualSharpness.default;\n  }\n});\nObject.defineProperty(exports, \"mfcc\", {\n  enumerable: true,\n  get: function get() {\n    return _mfcc.default;\n  }\n});\nObject.defineProperty(exports, \"chroma\", {\n  enumerable: true,\n  get: function get() {\n    return _chroma.default;\n  }\n});\nObject.defineProperty(exports, \"powerSpectrum\", {\n  enumerable: true,\n  get: function get() {\n    return _powerSpectrum.default;\n  }\n});\nObject.defineProperty(exports, \"spectralFlux\", {\n  enumerable: true,\n  get: function get() {\n    return _spectralFlux.default;\n  }\n});\nexports.amplitudeSpectrum = exports.complexSpectrum = exports.buffer = void 0;\n\nvar _rms = _interopRequireDefault(__webpack_require__(/*! ./extractors/rms */ \"./node_modules/meyda/dist/node/extractors/rms.js\"));\n\nvar _energy = _interopRequireDefault(__webpack_require__(/*! ./extractors/energy */ \"./node_modules/meyda/dist/node/extractors/energy.js\"));\n\nvar _spectralSlope = _interopRequireDefault(__webpack_require__(/*! ./extractors/spectralSlope */ \"./node_modules/meyda/dist/node/extractors/spectralSlope.js\"));\n\nvar _spectralCentroid = _interopRequireDefault(__webpack_require__(/*! ./extractors/spectralCentroid */ \"./node_modules/meyda/dist/node/extractors/spectralCentroid.js\"));\n\nvar _spectralRolloff = _interopRequireDefault(__webpack_require__(/*! ./extractors/spectralRolloff */ \"./node_modules/meyda/dist/node/extractors/spectralRolloff.js\"));\n\nvar _spectralFlatness = _interopRequireDefault(__webpack_require__(/*! ./extractors/spectralFlatness */ \"./node_modules/meyda/dist/node/extractors/spectralFlatness.js\"));\n\nvar _spectralSpread = _interopRequireDefault(__webpack_require__(/*! ./extractors/spectralSpread */ \"./node_modules/meyda/dist/node/extractors/spectralSpread.js\"));\n\nvar _spectralSkewness = _interopRequireDefault(__webpack_require__(/*! ./extractors/spectralSkewness */ \"./node_modules/meyda/dist/node/extractors/spectralSkewness.js\"));\n\nvar _spectralKurtosis = _interopRequireDefault(__webpack_require__(/*! ./extractors/spectralKurtosis */ \"./node_modules/meyda/dist/node/extractors/spectralKurtosis.js\"));\n\nvar _zcr = _interopRequireDefault(__webpack_require__(/*! ./extractors/zcr */ \"./node_modules/meyda/dist/node/extractors/zcr.js\"));\n\nvar _loudness = _interopRequireDefault(__webpack_require__(/*! ./extractors/loudness */ \"./node_modules/meyda/dist/node/extractors/loudness.js\"));\n\nvar _perceptualSpread = _interopRequireDefault(__webpack_require__(/*! ./extractors/perceptualSpread */ \"./node_modules/meyda/dist/node/extractors/perceptualSpread.js\"));\n\nvar _perceptualSharpness = _interopRequireDefault(__webpack_require__(/*! ./extractors/perceptualSharpness */ \"./node_modules/meyda/dist/node/extractors/perceptualSharpness.js\"));\n\nvar _mfcc = _interopRequireDefault(__webpack_require__(/*! ./extractors/mfcc */ \"./node_modules/meyda/dist/node/extractors/mfcc.js\"));\n\nvar _chroma = _interopRequireDefault(__webpack_require__(/*! ./extractors/chroma */ \"./node_modules/meyda/dist/node/extractors/chroma.js\"));\n\nvar _powerSpectrum = _interopRequireDefault(__webpack_require__(/*! ./extractors/powerSpectrum */ \"./node_modules/meyda/dist/node/extractors/powerSpectrum.js\"));\n\nvar _spectralFlux = _interopRequireDefault(__webpack_require__(/*! ./extractors/spectralFlux */ \"./node_modules/meyda/dist/node/extractors/spectralFlux.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buffer = function buffer(args) {\n  return args.signal;\n};\n\nexports.buffer = buffer;\n\nvar complexSpectrum = function complexSpectrum(args) {\n  return args.complexSpectrum;\n};\n\nexports.complexSpectrum = complexSpectrum;\n\nvar amplitudeSpectrum = function amplitudeSpectrum(args) {\n  return args.ampSpectrum;\n};\n\nexports.amplitudeSpectrum = amplitudeSpectrum;\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/main.js\":\n/*!**********************************************!*\\\n  !*** ./node_modules/meyda/dist/node/main.js ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar utilities = _interopRequireWildcard(__webpack_require__(/*! ./utilities */ \"./node_modules/meyda/dist/node/utilities.js\"));\n\nvar extractors = _interopRequireWildcard(__webpack_require__(/*! ./featureExtractors */ \"./node_modules/meyda/dist/node/featureExtractors.js\"));\n\nvar _fftjs = __webpack_require__(/*! fftjs */ \"./node_modules/fftjs/dist/fft.js\");\n\nvar _meydaWa = __webpack_require__(/*! ./meyda-wa */ \"./node_modules/meyda/dist/node/meyda-wa.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Meyda Module\n * @module meyda\n */\n\n/**\n * Options for constructing a MeydaAnalyzer\n * @typedef {Object} MeydaOptions\n * @property {AudioContext} audioContext - The Audio Context for the MeydaAnalyzer to operate in.\n * @property {AudioNode} source - The Audio Node for Meyda to listen to.\n * @property {number} [bufferSize] - The size of the buffer.\n * @property {number} [hopSize] - The hop size between buffers.\n * @property {number} [sampleRate] - The number of samples per second in the audio context.\n * @property {Function} [callback] - A function to receive the frames of audio features\n * @property {string} [windowingFunction] - The Windowing Function to apply to the signal before transformation to the frequency domain\n * @property {string|Array.<string>} [featureExtractors] - Specify the feature extractors you want to run on the audio.\n * @property {boolean} [startImmediately] - Pass `true` to start feature extraction immediately\n */\n\n/**\n * Web Audio context\n * Either an {@link AudioContext|https://developer.mozilla.org/en-US/docs/Web/API/AudioContext}\n * or an {@link OfflineAudioContext|https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext}\n * @typedef {Object} AudioContext\n */\n\n/**\n * AudioNode\n * A Web AudioNode\n * @typedef {Object} AudioNode\n */\n\n/**\n * ScriptProcessorNode\n * A Web Audio ScriptProcessorNode\n * @typedef {Object} ScriptProcessorNode\n */\n\n/**\n * @class Meyda\n * @hideconstructor\n * @classdesc\n * The schema for the default export of the Meyda library.\n * @example\n * var Meyda = require('meyda');\n */\nvar Meyda = {\n  /**\n   * Meyda stores a reference to the relevant audio context here for use inside\n   * the Web Audio API.\n   * @instance\n   * @member {AudioContext}\n   */\n  audioContext: null,\n\n  /**\n   * Meyda keeps an internal ScriptProcessorNode in which it runs audio feature\n   * extraction. The ScriptProcessorNode is stored in this member variable.\n   * @instance\n   * @member {ScriptProcessorNode}\n   */\n  spn: null,\n\n  /**\n   * The length of each buffer that Meyda will extract audio on. When recieving\n   * input via the Web Audio API, the Script Processor Node chunks incoming audio\n   * into arrays of this length. Longer buffers allow for more precision in the\n   * frequency domain, but increase the amount of time it takes for Meyda to\n   * output a set of audio features for the buffer. You can calculate how many\n   * sets of audio features Meyda will output per second by dividing the\n   * buffer size by the sample rate. If you're using Meyda for visualisation,\n   * make sure that you're collecting audio features at a rate that's faster\n   * than or equal to the video frame rate you expect.\n   * @instance\n   * @member {number}\n   */\n  bufferSize: 512,\n\n  /**\n   * The number of samples per second of the incoming audio. This affects\n   * feature extraction outside of the context of the Web Audio API, and must be\n   * set accurately - otherwise calculations will be off.\n   * @instance\n   * @member {number}\n   */\n  sampleRate: 44100,\n\n  /**\n   * The number of Mel bands to use in the Mel Frequency Cepstral Co-efficients\n   * feature extractor\n   * @instance\n   * @member {number}\n   */\n  melBands: 26,\n\n  /**\n   * The number of bands to divide the spectrum into for the Chroma feature\n   * extractor. 12 is the standard number of semitones per octave in the western\n   * music tradition, but Meyda can use an arbitrary number of bands, which\n   * can be useful for microtonal music.\n   * @instance\n   * @member {number}\n   */\n  chromaBands: 12,\n\n  /**\n   * A function you can provide that will be called for each buffer that Meyda\n   * receives from its source node\n   * @instance\n   * @member {Function}\n   */\n  callback: null,\n\n  /**\n   * Specify the windowing function to apply to the buffer before the\n   * transformation from the time domain to the frequency domain is performed\n   * @instance\n   * @member {string}\n   */\n  windowingFunction: 'hanning',\n\n  /**\n   * @member {object}\n   */\n  featureExtractors: extractors,\n  EXTRACTION_STARTED: false,\n  numberOfMFCCCoefficients: 13,\n  _featuresToExtract: [],\n  windowing: utilities.applyWindow,\n  _errors: {\n    notPow2: new Error('Meyda: Buffer size must be a power of 2, e.g. 64 or 512'),\n    featureUndef: new Error('Meyda: No features defined.'),\n    invalidFeatureFmt: new Error('Meyda: Invalid feature format'),\n    invalidInput: new Error('Meyda: Invalid input.'),\n    noAC: new Error('Meyda: No AudioContext specified.'),\n    noSource: new Error('Meyda: No source node specified.')\n  },\n\n  /**\n   * @summary\n   * Create a MeydaAnalyzer\n   *\n   * A factory function for creating a MeydaAnalyzer, the interface for using\n   * Meyda in the context of Web Audio.\n   *\n   * @method\n   * @param {MeydaOptions} options Options - an object containing configuration\n   * @returns {MeydaAnalyzer}\n   * @example\n   * const analyzer = Meyda.createMeydaAnalyzer({\n   *   \"audioContext\": audioContext,\n   *   \"source\": source,\n   *   \"bufferSize\": 512,\n   *   \"featureExtractors\": [\"rms\"],\n   *   \"inputs\": 2,\n   *   \"callback\": features => {\n   *     levelRangeElement.value = features.rms;\n   *   }\n   * });\n   */\n  createMeydaAnalyzer: function createMeydaAnalyzer(options) {\n    return new _meydaWa.MeydaAnalyzer(options, Meyda);\n  },\n\n  /**\n   * Extract an audio feature from a buffer\n   * @function\n   * @param {(string|Array.<string>)} feature - the feature you want to extract\n   * @param {Array.<number>} signal\n   * An array of numbers that represents the signal. It should be of length\n   * `meyda.bufferSize`\n   * @param {Array.<number>} [previousSignal] - the previous buffer\n   * @returns {object} Features\n   * @example\n   * meyda.bufferSize = 2048;\n   * const features = meyda.extract(['zcr', 'spectralCentroid'], signal);\n   */\n  extract: function extract(feature, signal, previousSignal) {\n    var _this = this;\n\n    if (!signal) throw this._errors.invalidInput;else if (_typeof(signal) != 'object') throw this._errors.invalidInput;else if (!feature) throw this._errors.featureUndef;else if (!utilities.isPowerOfTwo(signal.length)) throw this._errors.notPow2;\n\n    if (typeof this.barkScale == 'undefined' || this.barkScale.length != this.bufferSize) {\n      this.barkScale = utilities.createBarkScale(this.bufferSize, this.sampleRate, this.bufferSize);\n    } // Recalculate mel bank if buffer length changed\n\n\n    if (typeof this.melFilterBank == 'undefined' || this.barkScale.length != this.bufferSize || this.melFilterBank.length != this.melBands) {\n      this.melFilterBank = utilities.createMelFilterBank(Math.max(this.melBands, this.numberOfMFCCCoefficients), this.sampleRate, this.bufferSize);\n    } // Recalculate chroma bank if buffer length changed\n\n\n    if (typeof this.chromaFilterBank == 'undefined' || this.chromaFilterBank.length != this.chromaBands) {\n      this.chromaFilterBank = utilities.createChromaFilterBank(this.chromaBands, this.sampleRate, this.bufferSize);\n    }\n\n    if (typeof signal.buffer == 'undefined') {\n      //signal is a normal array, convert to F32A\n      this.signal = utilities.arrayToTyped(signal);\n    } else {\n      this.signal = signal;\n    }\n\n    var preparedSignal = prepareSignalWithSpectrum(signal, this.windowingFunction, this.bufferSize);\n    this.signal = preparedSignal.windowedSignal;\n    this.complexSpectrum = preparedSignal.complexSpectrum;\n    this.ampSpectrum = preparedSignal.ampSpectrum;\n\n    if (previousSignal) {\n      var _preparedSignal = prepareSignalWithSpectrum(previousSignal, this.windowingFunction, this.bufferSize);\n\n      this.previousSignal = _preparedSignal.windowedSignal;\n      this.previousComplexSpectrum = _preparedSignal.complexSpectrum;\n      this.previousAmpSpectrum = _preparedSignal.ampSpectrum;\n    }\n\n    var extract = function extract(feature) {\n      return _this.featureExtractors[feature]({\n        ampSpectrum: _this.ampSpectrum,\n        chromaFilterBank: _this.chromaFilterBank,\n        complexSpectrum: _this.complexSpectrum,\n        signal: _this.signal,\n        bufferSize: _this.bufferSize,\n        sampleRate: _this.sampleRate,\n        barkScale: _this.barkScale,\n        melFilterBank: _this.melFilterBank,\n        previousSignal: _this.previousSignal,\n        previousAmpSpectrum: _this.previousAmpSpectrum,\n        previousComplexSpectrum: _this.previousComplexSpectrum,\n        numberOfMFCCCoefficients: _this.numberOfMFCCCoefficients\n      });\n    };\n\n    if (_typeof(feature) === 'object') {\n      return feature.reduce(function (acc, el) {\n        return Object.assign({}, acc, _defineProperty({}, el, extract(el)));\n      }, {});\n    } else if (typeof feature === 'string') {\n      return extract(feature);\n    } else {\n      throw this._errors.invalidFeatureFmt;\n    }\n  }\n};\n\nvar prepareSignalWithSpectrum = function prepareSignalWithSpectrum(signal, windowingFunction, bufferSize) {\n  var preparedSignal = {};\n\n  if (typeof signal.buffer == 'undefined') {\n    //signal is a normal array, convert to F32A\n    preparedSignal.signal = utilities.arrayToTyped(signal);\n  } else {\n    preparedSignal.signal = signal;\n  }\n\n  preparedSignal.windowedSignal = utilities.applyWindow(preparedSignal.signal, windowingFunction);\n  preparedSignal.complexSpectrum = (0, _fftjs.fft)(preparedSignal.windowedSignal);\n  preparedSignal.ampSpectrum = new Float32Array(bufferSize / 2);\n\n  for (var i = 0; i < bufferSize / 2; i++) {\n    preparedSignal.ampSpectrum[i] = Math.sqrt(Math.pow(preparedSignal.complexSpectrum.real[i], 2) + Math.pow(preparedSignal.complexSpectrum.imag[i], 2));\n  }\n\n  return preparedSignal;\n};\n/**\n * The Meyda class\n * @type {Meyda}\n */\n\n\nvar _default = Meyda;\nexports.default = _default;\nif (typeof window !== 'undefined') window.Meyda = Meyda;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/meyda-wa.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/meyda-wa.js ***!\n  \\**************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MeydaAnalyzer = void 0;\n\nvar utilities = _interopRequireWildcard(__webpack_require__(/*! ./utilities */ \"./node_modules/meyda/dist/node/utilities.js\"));\n\nvar featureExtractors = _interopRequireWildcard(__webpack_require__(/*! ./featureExtractors */ \"./node_modules/meyda/dist/node/featureExtractors.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n  * MeydaAnalyzer\n  * @classdesc\n  * Meyda's interface to the Web Audio API. MeydaAnalyzer abstracts an API on\n  * top of the Web Audio API's ScriptProcessorNode, running the Meyda audio\n  * feature extractors inside that context.\n  *\n  * MeydaAnalyzer's constructor should not be called directly - MeydaAnalyzer\n  * objects should be generated using the {@link Meyda.createMeydaAnalyzer}\n  * factory function in the main Meyda class.\n  *\n  * @example\n  * const analyzer = Meyda.createMeydaAnalyzer({\n  *   \"audioContext\": audioContext,\n  *   \"source\": source,\n  *   \"bufferSize\": 512,\n  *   \"featureExtractors\": [\"rms\"],\n  *   \"inputs\": 2,\n  *   \"callback\": features => {\n  *     levelRangeElement.value = features.rms;\n  *   }\n  * });\n  * @hideconstructor\n  */\nvar MeydaAnalyzer =\n/*#__PURE__*/\nfunction () {\n  function MeydaAnalyzer(options, _this) {\n    var _this2 = this;\n\n    _classCallCheck(this, MeydaAnalyzer);\n\n    this._m = _this;\n\n    if (!options.audioContext) {\n      throw this._m.errors.noAC;\n    } else if (options.bufferSize && !utilities.isPowerOfTwo(options.bufferSize)) {\n      throw this._m._errors.notPow2;\n    } else if (!options.source) {\n      throw this._m._errors.noSource;\n    }\n\n    this._m.audioContext = options.audioContext; // TODO: validate options\n\n    this._m.bufferSize = options.bufferSize || this._m.bufferSize || 256;\n    this._m.hopSize = options.hopSize || this._m.hopSize || this._m.bufferSize;\n    this._m.sampleRate = options.sampleRate || this._m.audioContext.sampleRate || 44100;\n    this._m.callback = options.callback;\n    this._m.windowingFunction = options.windowingFunction || 'hanning';\n    this._m.featureExtractors = featureExtractors;\n    this._m.EXTRACTION_STARTED = options.startImmediately || false; //create nodes\n\n    this._m.spn = this._m.audioContext.createScriptProcessor(this._m.bufferSize, 1, 1);\n\n    this._m.spn.connect(this._m.audioContext.destination);\n\n    this._m._featuresToExtract = options.featureExtractors || []; //always recalculate BS and MFB when a new Meyda analyzer is created.\n\n    this._m.barkScale = utilities.createBarkScale(this._m.bufferSize, this._m.sampleRate, this._m.bufferSize);\n    this._m.melFilterBank = utilities.createMelFilterBank(this._m.melBands, this._m.sampleRate, this._m.bufferSize);\n    this._m.inputData = null;\n    this._m.previousInputData = null;\n    this._m.frame = null;\n    this._m.previousFrame = null;\n    this.setSource(options.source);\n\n    this._m.spn.onaudioprocess = function (e) {\n      if (_this2._m.inputData !== null) {\n        _this2._m.previousInputData = _this2._m.inputData;\n      }\n\n      _this2._m.inputData = e.inputBuffer.getChannelData(0);\n\n      if (!_this2._m.previousInputData) {\n        var buffer = _this2._m.inputData;\n      } else {\n        var buffer = new Float32Array(_this2._m.previousInputData.length + _this2._m.inputData.length - _this2._m.hopSize);\n        buffer.set(_this2._m.previousInputData.slice(_this2._m.hopSize));\n        buffer.set(_this2._m.inputData, _this2._m.previousInputData.length - _this2._m.hopSize);\n      }\n\n      ;\n      var frames = utilities.frame(buffer, _this2._m.bufferSize, _this2._m.hopSize);\n      frames.forEach(function (f) {\n        _this2._m.frame = f;\n\n        var features = _this2._m.extract(_this2._m._featuresToExtract, _this2._m.frame, _this2._m.previousFrame); // call callback if applicable\n\n\n        if (typeof _this2._m.callback === 'function' && _this2._m.EXTRACTION_STARTED) {\n          _this2._m.callback(features);\n        }\n\n        _this2._m.previousFrame = _this2._m.frame;\n      });\n    };\n  }\n  /**\n   * Start feature extraction\n   * The audio features will be passed to the callback function that was defined\n   * in the MeydaOptions that were passed to the factory when constructing the\n   * MeydaAnalyzer.\n   * @param {(string|Array.<string>)} [features]\n   * Change the features that Meyda is extracting. Defaults to the features that\n   * were set upon construction in the options parameter.\n   * @example\n   * analyzer.start('chroma');\n   */\n\n\n  _createClass(MeydaAnalyzer, [{\n    key: \"start\",\n    value: function start(features) {\n      this._m._featuresToExtract = features || this._m._featuresToExtract;\n      this._m.EXTRACTION_STARTED = true;\n    }\n    /**\n     * Stop feature extraction.\n     * @example\n     * analyzer.stop();\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this._m.EXTRACTION_STARTED = false;\n    }\n    /**\n     * Set the Audio Node for Meyda to listen to.\n     * @param {AudioNode} source - The Audio Node for Meyda to listen to\n     * @example\n     * analyzer.setSource(audioSourceNode);\n     */\n\n  }, {\n    key: \"setSource\",\n    value: function setSource(source) {\n      source.connect(this._m.spn);\n    }\n    /**\n     * Get a set of features from the current frame.\n     * @param {(string|Array.<string>)} [features]\n     * Change the features that Meyda is extracting\n     * @example\n     * analyzer.get('spectralFlatness');\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(features) {\n      if (this._m.inputData) {\n        return this._m.extract(features || this._m._featuresToExtract, this._m.inputData, this._m.previousInputData);\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return MeydaAnalyzer;\n}();\n\nexports.MeydaAnalyzer = MeydaAnalyzer;\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/utilities.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/utilities.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPowerOfTwo = isPowerOfTwo;\nexports.error = error;\nexports.pointwiseBufferMult = pointwiseBufferMult;\nexports.applyWindow = applyWindow;\nexports.createBarkScale = createBarkScale;\nexports.typedToArray = typedToArray;\nexports.arrayToTyped = arrayToTyped;\nexports._normalize = _normalize;\nexports.normalize = normalize;\nexports.normalizeToOne = normalizeToOne;\nexports.mean = mean;\nexports.melToFreq = melToFreq;\nexports.freqToMel = freqToMel;\nexports.createMelFilterBank = createMelFilterBank;\nexports.hzToOctaves = hzToOctaves;\nexports.normalizeByColumn = normalizeByColumn;\nexports.createChromaFilterBank = createChromaFilterBank;\nexports.frame = frame;\n\nvar windowing = _interopRequireWildcard(__webpack_require__(/*! ./windowing */ \"./node_modules/meyda/dist/node/windowing.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar windows = {};\n\nfunction isPowerOfTwo(num) {\n  while (num % 2 === 0 && num > 1) {\n    num /= 2;\n  }\n\n  return num === 1;\n}\n\nfunction error(message) {\n  throw new Error('Meyda: ' + message);\n}\n\nfunction pointwiseBufferMult(a, b) {\n  var c = [];\n\n  for (var i = 0; i < Math.min(a.length, b.length); i++) {\n    c[i] = a[i] * b[i];\n  }\n\n  return c;\n}\n\nfunction applyWindow(signal, windowname) {\n  if (windowname !== 'rect') {\n    if (windowname === '' || !windowname) windowname = 'hanning';\n    if (!windows[windowname]) windows[windowname] = {};\n\n    if (!windows[windowname][signal.length]) {\n      try {\n        windows[windowname][signal.length] = windowing[windowname](signal.length);\n      } catch (e) {\n        throw new Error('Invalid windowing function');\n      }\n    }\n\n    signal = pointwiseBufferMult(signal, windows[windowname][signal.length]);\n  }\n\n  return signal;\n}\n\nfunction createBarkScale(length, sampleRate, bufferSize) {\n  var barkScale = new Float32Array(length);\n\n  for (var i = 0; i < barkScale.length; i++) {\n    barkScale[i] = i * sampleRate / bufferSize;\n    barkScale[i] = 13 * Math.atan(barkScale[i] / 1315.8) + 3.5 * Math.atan(Math.pow(barkScale[i] / 7518, 2));\n  }\n\n  return barkScale;\n}\n\nfunction typedToArray(t) {\n  // utility to convert typed arrays to normal arrays\n  return Array.prototype.slice.call(t);\n}\n\nfunction arrayToTyped(t) {\n  // utility to convert arrays to typed F32 arrays\n  return Float32Array.from(t);\n}\n\nfunction _normalize(num, range) {\n  return num / range;\n}\n\nfunction normalize(a, range) {\n  return a.map(function (n) {\n    return _normalize(n, range);\n  });\n}\n\nfunction normalizeToOne(a) {\n  var max = Math.max.apply(null, a);\n  return a.map(function (n) {\n    return n / max;\n  });\n}\n\nfunction mean(a) {\n  return a.reduce(function (prev, cur) {\n    return prev + cur;\n  }) / a.length;\n}\n\nfunction _melToFreq(melValue) {\n  var freqValue = 700 * (Math.exp(melValue / 1125) - 1);\n  return freqValue;\n}\n\nfunction _freqToMel(freqValue) {\n  var melValue = 1125 * Math.log(1 + freqValue / 700);\n  return melValue;\n}\n\nfunction melToFreq(mV) {\n  return _melToFreq(mV);\n}\n\nfunction freqToMel(fV) {\n  return _freqToMel(fV);\n}\n\nfunction createMelFilterBank(numFilters, sampleRate, bufferSize) {\n  //the +2 is the upper and lower limits\n  var melValues = new Float32Array(numFilters + 2);\n  var melValuesInFreq = new Float32Array(numFilters + 2); //Generate limits in Hz - from 0 to the nyquist.\n\n  var lowerLimitFreq = 0;\n  var upperLimitFreq = sampleRate / 2; //Convert the limits to Mel\n\n  var lowerLimitMel = _freqToMel(lowerLimitFreq);\n\n  var upperLimitMel = _freqToMel(upperLimitFreq); //Find the range\n\n\n  var range = upperLimitMel - lowerLimitMel; //Find the range as part of the linear interpolation\n\n  var valueToAdd = range / (numFilters + 1);\n  var fftBinsOfFreq = Array(numFilters + 2);\n\n  for (var i = 0; i < melValues.length; i++) {\n    // Initialising the mel frequencies\n    // They're a linear interpolation between the lower and upper limits.\n    melValues[i] = i * valueToAdd; // Convert back to Hz\n\n    melValuesInFreq[i] = _melToFreq(melValues[i]); // Find the corresponding bins\n\n    fftBinsOfFreq[i] = Math.floor((bufferSize + 1) * melValuesInFreq[i] / sampleRate);\n  }\n\n  var filterBank = Array(numFilters);\n\n  for (var j = 0; j < filterBank.length; j++) {\n    // Create a two dimensional array of size numFilters * (buffersize/2)+1\n    // pre-populating the arrays with 0s.\n    filterBank[j] = Array.apply(null, new Array(bufferSize / 2 + 1)).map(Number.prototype.valueOf, 0); //creating the lower and upper slopes for each bin\n\n    for (var _i = fftBinsOfFreq[j]; _i < fftBinsOfFreq[j + 1]; _i++) {\n      filterBank[j][_i] = (_i - fftBinsOfFreq[j]) / (fftBinsOfFreq[j + 1] - fftBinsOfFreq[j]);\n    }\n\n    for (var _i2 = fftBinsOfFreq[j + 1]; _i2 < fftBinsOfFreq[j + 2]; _i2++) {\n      filterBank[j][_i2] = (fftBinsOfFreq[j + 2] - _i2) / (fftBinsOfFreq[j + 2] - fftBinsOfFreq[j + 1]);\n    }\n  }\n\n  return filterBank;\n}\n\nfunction hzToOctaves(freq, A440) {\n  return Math.log2(16 * freq / A440);\n}\n\nfunction normalizeByColumn(a) {\n  var emptyRow = a[0].map(function () {\n    return 0;\n  });\n  var colDenominators = a.reduce(function (acc, row) {\n    row.forEach(function (cell, j) {\n      acc[j] += Math.pow(cell, 2);\n    });\n    return acc;\n  }, emptyRow).map(Math.sqrt);\n  return a.map(function (row, i) {\n    return row.map(function (v, j) {\n      return v / (colDenominators[j] || 1);\n    });\n  });\n}\n\n;\n\nfunction createChromaFilterBank(numFilters, sampleRate, bufferSize) {\n  var centerOctave = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  var octaveWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 2;\n  var baseC = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  var A440 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 440;\n  var numOutputBins = Math.floor(bufferSize / 2) + 1;\n  var frequencyBins = new Array(bufferSize).fill(0).map(function (_, i) {\n    return numFilters * hzToOctaves(sampleRate * i / bufferSize, A440);\n  }); // Set a value for the 0 Hz bin that is 1.5 octaves below bin 1\n  // (so chroma is 50% rotated from bin 1, and bin width is broad)\n\n  frequencyBins[0] = frequencyBins[1] - 1.5 * numFilters;\n  var binWidthBins = frequencyBins.slice(1).map(function (v, i) {\n    return Math.max(v - frequencyBins[i]);\n  }, 1).concat([1]);\n  var halfNumFilters = Math.round(numFilters / 2);\n  var filterPeaks = new Array(numFilters).fill(0).map(function (_, i) {\n    return frequencyBins.map(function (frq) {\n      return (10 * numFilters + halfNumFilters + frq - i) % numFilters - halfNumFilters;\n    });\n  });\n  var weights = filterPeaks.map(function (row, i) {\n    return row.map(function (_, j) {\n      return Math.exp(-0.5 * Math.pow(2 * filterPeaks[i][j] / binWidthBins[j], 2));\n    });\n  });\n  weights = normalizeByColumn(weights);\n\n  if (octaveWidth) {\n    var octaveWeights = frequencyBins.map(function (v) {\n      return Math.exp(-0.5 * Math.pow((v / numFilters - centerOctave) / octaveWidth, 2));\n    });\n    weights = weights.map(function (row) {\n      return row.map(function (cell, j) {\n        return cell * octaveWeights[j];\n      });\n    });\n  }\n\n  if (baseC) {\n    weights = _toConsumableArray(weights.slice(3)).concat(_toConsumableArray(weights.slice(0, 3)));\n  }\n\n  return weights.map(function (row) {\n    return row.slice(0, numOutputBins);\n  });\n}\n\nfunction frame(buffer, frameLength, hopLength) {\n  if (buffer.length < frameLength) {\n    throw new Error('Buffer is too short for frame length');\n  }\n\n  if (hopLength < 1) {\n    throw new Error('Hop length cannot be less that 1');\n  }\n\n  if (frameLength < 1) {\n    throw new Error('Frame length cannot be less that 1');\n  }\n\n  var numFrames = 1 + Math.floor((buffer.length - frameLength) / hopLength);\n  return new Array(numFrames).fill(0).map(function (_, i) {\n    return buffer.slice(i * hopLength, i * hopLength + frameLength);\n  });\n}\n\n/***/ }),\n\n/***/ \"./node_modules/meyda/dist/node/windowing.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/meyda/dist/node/windowing.js ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.blackman = blackman;\nexports.sine = sine;\nexports.hanning = hanning;\nexports.hamming = hamming;\n\nfunction blackman(size) {\n  var blackmanBuffer = new Float32Array(size);\n  var coeff1 = 2 * Math.PI / (size - 1);\n  var coeff2 = 2 * coeff1; //According to http://uk.mathworks.com/help/signal/ref/blackman.html\n  //first half of the window\n\n  for (var i = 0; i < size / 2; i++) {\n    blackmanBuffer[i] = 0.42 - 0.5 * Math.cos(i * coeff1) + 0.08 * Math.cos(i * coeff2);\n  } //second half of the window\n\n\n  for (var _i = size / 2; _i > 0; _i--) {\n    blackmanBuffer[size - _i] = blackmanBuffer[_i - 1];\n  }\n\n  return blackmanBuffer;\n}\n\nfunction sine(size) {\n  var coeff = Math.PI / (size - 1);\n  var sineBuffer = new Float32Array(size);\n\n  for (var i = 0; i < size; i++) {\n    sineBuffer[i] = Math.sin(coeff * i);\n  }\n\n  return sineBuffer;\n}\n\nfunction hanning(size) {\n  var hanningBuffer = new Float32Array(size);\n\n  for (var i = 0; i < size; i++) {\n    // According to the R documentation\n    // http://ugrad.stat.ubc.ca/R/library/e1071/html/hanning.window.html\n    hanningBuffer[i] = 0.5 - 0.5 * Math.cos(2 * Math.PI * i / (size - 1));\n  }\n\n  return hanningBuffer;\n}\n\nfunction hamming(size) {\n  var hammingBuffer = new Float32Array(size);\n\n  for (var i = 0; i < size; i++) {\n    //According to http://uk.mathworks.com/help/signal/ref/hamming.html\n    hammingBuffer[i] = 0.54 - 0.46 * Math.cos(2 * Math.PI * (i / size - 1));\n  }\n\n  return hammingBuffer;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/object-assign/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/object-assign/index.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n\n/***/ \"./node_modules/process/browser.js\":\n/*!*****************************************!*\\\n  !*** ./node_modules/process/browser.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ \"./node_modules/ts-loader/index.js!./src/worker/feature-extractor.worker.ts\":\n/*!*************************************************************************!*\\\n  !*** ./node_modules/ts-loader!./src/worker/feature-extractor.worker.ts ***!\n  \\*************************************************************************/\n/*! no exports provided */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main_feature_extractor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../main/feature-extractor */ \"./src/main/feature-extractor.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nonmessage = function (_a) {\n    var data = _a.data;\n    return __awaiter(this, void 0, void 0, function () {\n        var buffers, features, extractionParameters, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    buffers = data[0], features = data[1], extractionParameters = data[2];\n                    _b = postMessage;\n                    return [4 /*yield*/, Object(_main_feature_extractor__WEBPACK_IMPORTED_MODULE_0__[\"extractFeatures\"])(buffers, features, extractionParameters)];\n                case 1:\n                    _b.apply(void 0, [_c.sent()]);\n                    return [2 /*return*/];\n            }\n        });\n    });\n};\n\n\n/***/ }),\n\n/***/ \"./node_modules/util/node_modules/inherits/inherits.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/util/node_modules/inherits/inherits.js ***!\n  \\*************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\ntry {\n  var util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = __webpack_require__(/*! ./inherits_browser.js */ \"./node_modules/util/node_modules/inherits/inherits_browser.js\");\n}\n\n\n/***/ }),\n\n/***/ \"./node_modules/util/node_modules/inherits/inherits_browser.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/util/node_modules/inherits/inherits_browser.js ***!\n  \\*********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./node_modules/util/support/isBufferBrowser.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/util/support/isBufferBrowser.js ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n/***/ }),\n\n/***/ \"./node_modules/util/util.js\":\n/*!***********************************!*\\\n  !*** ./node_modules/util/util.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/util/node_modules/inherits/inherits.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/buildin/global.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/global.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n\n/***/ \"./src/main/feature-extractor.ts\":\n/*!***************************************!*\\\n  !*** ./src/main/feature-extractor.ts ***!\n  \\***************************************/\n/*! exports provided: extractFeatures */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extractFeatures\", function() { return extractFeatures; });\n/* harmony import */ var meyda__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! meyda */ \"./node_modules/meyda/dist/node/main.js\");\n/* harmony import */ var meyda__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(meyda__WEBPACK_IMPORTED_MODULE_0__);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n// Meyda `extract` expects to be bound to an object, so it doesn't work super\n// well with es6 modules. This is a hack and I'm sorry on many counts.\nvar extract = meyda__WEBPACK_IMPORTED_MODULE_0__[\"extract\"].bind(meyda__WEBPACK_IMPORTED_MODULE_0___default.a);\n// https://scotch.io/courses/the-ultimate-guide-to-javascript-algorithms/array-chunking#toc-testing-performance-with-jsperf\nfunction chunkArray(array, length, hopSize) {\n    var result = [];\n    for (var i = 0; i < array.length; i += length + hopSize) {\n        var chunk = array.slice(i, i + length);\n        result.push(chunk);\n    }\n    return result;\n}\nfunction extractFeatures(buffers, features, _a) {\n    var bufferSize = _a.bufferSize, hopSize = _a.hopSize, zeroPadding = _a.zeroPadding, windowingFunction = _a.windowingFunction;\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_b) {\n            return [2 /*return*/, buffers.map(function (buffer) {\n                    var chunkedBuffer = chunkArray(buffer, bufferSize, hopSize);\n                    return chunkedBuffer.map(function (chunk, chunkIndex) {\n                        if (chunkIndex === chunkedBuffer.length - 1) {\n                            var newFullLengthChunk = new Float32Array(bufferSize);\n                            newFullLengthChunk.set(chunk);\n                            return extract(features, newFullLengthChunk);\n                        }\n                        return extract(features, chunk);\n                    });\n                })];\n        });\n    });\n}\n\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",t.p+"c92ede66d3665eda7ef9.worker.js")}},"./node_modules/worker-loader/dist/workers/InlineWorker.js":function(e,n,t){"use strict";var c=window.URL||window.webkitURL;e.exports=function(e,n){try{try{var t;try{(t=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(e),t=t.getBlob()}catch(r){t=new Blob([e])}return new Worker(c.createObjectURL(t))}catch(r){return new Worker("data:application/javascript,"+encodeURIComponent(e))}}catch(r){if(!n)throw Error("Inline worker is not supported");return new Worker(n)}}},"./src/main/feature-extractor.ts":function(e,n,t){"use strict";t.r(n),t.d(n,"extractFeatures",(function(){return a}));var c=t("./node_modules/meyda/dist/node/main.js"),r=t.n(c),l=function(e,n,t,c){return new(t||(t=Promise))((function(r,l){function i(e){try{a(c.next(e))}catch(n){l(n)}}function o(e){try{a(c.throw(e))}catch(n){l(n)}}function a(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,o)}a((c=c.apply(e,n||[])).next())}))},i=function(e,n){var t,c,r,l,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return l={next:o(0),throw:o(1),return:o(2)},"function"===typeof Symbol&&(l[Symbol.iterator]=function(){return this}),l;function o(l){return function(o){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,c&&(r=2&l[0]?c.return:l[0]?c.throw||((r=c.return)&&r.call(c),0):c.next)&&!(r=r.call(c,l[1])).done)return r;switch(c=0,r&&(l=[2&l[0],r.value]),l[0]){case 0:case 1:r=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,c=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(!(r=(r=i.trys).length>0&&r[r.length-1])&&(6===l[0]||2===l[0])){i=0;continue}if(3===l[0]&&(!r||l[1]>r[0]&&l[1]<r[3])){i.label=l[1];break}if(6===l[0]&&i.label<r[1]){i.label=r[1],r=l;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(l);break}r[2]&&i.ops.pop(),i.trys.pop();continue}l=n.call(e,i)}catch(o){l=[6,o],c=0}finally{t=r=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,o])}}},o=c.extract.bind(r.a);function a(e,n,t){var c=t.bufferSize,r=t.hopSize;return t.zeroPadding,t.windowingFunction,l(this,void 0,void 0,(function(){return i(this,(function(t){return[2,e.map((function(e){var t=function(e,n,t){for(var c=[],r=0;r<e.length;r+=n+t){var l=e.slice(r,r+n);c.push(l)}return c}(e,c,r);return t.map((function(e,r){if(r===t.length-1){var l=new Float32Array(c);return l.set(e),o(n,l)}return o(n,e)}))}))]}))}))}},"./src/main/index.ts":function(e,n,t){"use strict";t.r(n),t.d(n,"availableFeatureExtractors",(function(){return u})),t.d(n,"extractFeature",(function(){return b})),t.d(n,"extractFeatureMainThread",(function(){return m}));var c=t("./node_modules/worker-loader/dist/cjs.js?fallback=true&inline!./src/worker/feature-extractor.worker.ts"),r=t.n(c),l=t("./src/main/feature-extractor.ts"),i=t("./node_modules/meyda/src/featureExtractors.js"),o=function(e,n,t,c){return new(t||(t=Promise))((function(r,l){function i(e){try{a(c.next(e))}catch(n){l(n)}}function o(e){try{a(c.throw(e))}catch(n){l(n)}}function a(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,o)}a((c=c.apply(e,n||[])).next())}))},a=function(e,n){var t,c,r,l,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return l={next:o(0),throw:o(1),return:o(2)},"function"===typeof Symbol&&(l[Symbol.iterator]=function(){return this}),l;function o(l){return function(o){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,c&&(r=2&l[0]?c.return:l[0]?c.throw||((r=c.return)&&r.call(c),0):c.next)&&!(r=r.call(c,l[1])).done)return r;switch(c=0,r&&(l=[2&l[0],r.value]),l[0]){case 0:case 1:r=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,c=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(!(r=(r=i.trys).length>0&&r[r.length-1])&&(6===l[0]||2===l[0])){i=0;continue}if(3===l[0]&&(!r||l[1]>r[0]&&l[1]<r[3])){i.label=l[1];break}if(6===l[0]&&i.label<r[1]){i.label=r[1],r=l;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(l);break}r[2]&&i.ops.pop(),i.trys.pop();continue}l=n.call(e,i)}catch(o){l=[6,o],c=0}finally{t=r=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,o])}}},u=Object.keys(i);function s(e,n,t){var c=t.bufferSize,l=t.hopSize,i=t.zeroPadding,u=t.windowingFunction;return o(this,void 0,void 0,(function(){return a(this,(function(t){return[2,new Promise((function(t,o){var a=new r.a;a.postMessage([e,n,{bufferSize:c,hopSize:l,zeroPadding:i,windowingFunction:u}]),a.onerror=o,a.onmessage=function(e){var n=e.data;t(n)}}))]}))}))}function d(e){return o(this,void 0,void 0,(function(){var n,t,c;return a(this,(function(r){switch(r.label){case 0:return n=new AudioContext,c=(t=n).decodeAudioData,[4,e.arrayBuffer()];case 1:return[4,c.apply(t,[r.sent()])];case 2:return[2,r.sent()]}}))}))}function B(e,n){return o(this,void 0,void 0,(function(){var t,c;return a(this,(function(r){switch(r.label){case 0:return[4,d(e)];case 1:return t=r.sent(),c=Array.from({length:t.numberOfChannels},(function(e,n){return n})),[2,(n||c).map((function(e){return t.getChannelData(e)}))]}}))}))}function g(e){return function(n){var t,c,r,l,i,u=n.audioBlob,s=n.audioFeatures,d=n.extractionParams;return o(this,void 0,void 0,(function(){var n,o,g,b,m;return a(this,(function(a){switch(a.label){case 0:return n=(null===(t=d)||void 0===t?void 0:t.bufferSize)||4096,o=(null===(c=d)||void 0===c?void 0:c.hopSize)||0,g=(null===(r=d)||void 0===r?void 0:r.zeroPadding)||0,b=(null===(l=d)||void 0===l?void 0:l.windowingFunction)||"hamming",[4,B(u,null===(i=d)||void 0===i?void 0:i.channels)];case 1:return m=a.sent(),[2,e(m,s,{bufferSize:n,hopSize:o,zeroPadding:g,windowingFunction:b})]}}))}))}}function b(e){return g(s).call(null,e)}function m(e){return g(l.extractFeatures).call(null,e)}}})},e.exports=c()},9:function(e,n,t){e.exports=t(20)}},[[9,1,2]]]);
//# sourceMappingURL=main.99798304.chunk.js.map